{"version":3,"sources":["format.js"],"names":["formatStringRender","v","formatNumberRender","test","v1","Number","toFixed","toString","split","first","parts","console","log","replace","baseFormats","key","title","type","render","label","a","multiply","a_s","isInteger","obj","Math","floor","add","b","digits","operation","subtract","divide","toInteger","floatNum","ret","times","num","isNegative","strfi","dotPos","indexOf","len","substr","length","pow","intNum","parseInt","abs","op","o1","o2","n1","n2","t1","t2","max","result","formatm","forEach","f"],"mappings":"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","sourceRoot":"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core","sourcesContent":["import { tf } from '../locale/locale';\n\nconst formatStringRender = v => v;\n\nconst formatNumberRender = (v) => {\n  //\n\n  if (/^(-?\\d*.?\\d*)$/.test(v)) {\n    const v1 = Number(v).toFixed(2).toString();\n    const [first, ...parts] = v1.split('\\\\.');\n    console.log(first.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,'), '7.');\n    return first.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  }\n\n  return v;\n};\n\nconst baseFormats = [\n  {\n    key: 'normal',\n    title: tf('format.normal'),\n    type: 'string',\n    render: formatStringRender,\n  },\n  {\n    key: 'text',\n    title: tf('format.text'),\n    type: 'string',\n    render: formatStringRender,\n  },\n  {\n    key: 'number',\n    title: tf('format.number'),\n    type: 'number',\n    label: '1,000.12',\n    render: formatNumberRender,\n  },\n  {\n    key: 'percent',\n    title: tf('format.percent'),\n    type: 'number',\n    label: '10.12%',\n    render: (v) => {\n      const a = multiply(v, 100);\n      const a_s = `${a}`;\n      return `${a_s}%`;\n    },\n  },\n  {\n    key: 'rmb',\n    title: tf('format.rmb'),\n    type: 'number',\n    label: '￥10.00',\n    render: v => `￥${formatNumberRender(v)}`,\n  },\n  {\n    key: 'usd',\n    title: tf('format.usd'),\n    type: 'number',\n    label: '$10.00',\n    render: v => `$${formatNumberRender(v)}`,\n  },\n  {\n    key: 'date',\n    title: tf('format.date'),\n    type: 'date',\n    label: '26/09/2008',\n    render: formatStringRender,\n  },\n  {\n    key: 'time',\n    title: tf('format.time'),\n    type: 'date',\n    label: '15:59:00',\n    render: formatStringRender,\n  },\n  {\n    key: 'datetime',\n    title: tf('format.datetime'),\n    type: 'date',\n    label: '26/09/2008 15:59:00',\n    render: formatStringRender,\n  },\n  {\n    key: 'duration',\n    title: tf('format.duration'),\n    type: 'date',\n    label: '24:01:00',\n    render: formatStringRender,\n  },\n];\n\nfunction isInteger(obj) {\n  return Math.floor(obj) === obj;\n}\n\n\nfunction add(a, b, digits) {\n  return operation(a, b, digits, 'add');\n}\n\nfunction subtract(a, b, digits) {\n  return operation(a, b, digits, 'subtract');\n}\n\nexport function multiply(a, b, digits) {\n  return operation(a, b, digits, 'multiply');\n}\n\nfunction divide(a, b, digits) {\n  return operation(a, b, digits, 'divide');\n}\n\n/*\n * 将一个浮点数转成整数，返回整数和倍数。如 3.14 >> 314，倍数是 100\n * @param floatNum {number} 小数\n * @return {object}\n *   {times:100, num: 314}\n */\nfunction toInteger(floatNum) {\n  const ret = { times: 1, num: 0 };\n  const isNegative = floatNum < 0;\n  if (isInteger(floatNum)) {\n    ret.num = floatNum;\n    return ret;\n  }\n  const strfi = `${floatNum}`;\n  const dotPos = strfi.indexOf('.');\n  const len = strfi.substr(dotPos + 1).length;\n  const times = Math.pow(10, len);\n  let intNum = parseInt(Math.abs(floatNum) * times + 0.5, 10);\n  ret.times = times;\n  if (isNegative) {\n    intNum = -intNum;\n  }\n  ret.num = intNum;\n  return ret;\n}\n\nfunction operation(a, b, digits, op) {\n  const o1 = toInteger(a);\n  const o2 = toInteger(b);\n  const n1 = o1.num;\n  const n2 = o2.num;\n  const t1 = o1.times;\n  const t2 = o2.times;\n  const max = t1 > t2 ? t1 : t2;\n  let result = null;\n  switch (op) {\n    case 'add':\n      if (t1 === t2) { // 两个小数位数相同\n        result = n1 + n2;\n      } else if (t1 > t2) { // o1 小数位 大于 o2\n        result = n1 + n2 * (t1 / t2);\n      } else { // o1 小数位 小于 o2\n        result = n1 * (t2 / t1) + n2;\n      }\n      return result / max;\n    case 'subtract':\n      if (t1 === t2) {\n        result = n1 - n2;\n      } else if (t1 > t2) {\n        result = n1 - n2 * (t1 / t2);\n      } else {\n        result = n1 * (t2 / t1) - n2;\n      }\n      return result / max;\n    case 'multiply':\n      result = (n1 * n2) / (t1 * t2);\n      return result;\n    case 'divide':\n      result = (n1 / n2) * (t2 / t1);\n      return result;\n  }\n}\n\n// const formats = (ary = []) => {\n//   const map = {};\n//   baseFormats.concat(ary).forEach((f) => {\n//     map[f.key] = f;\n//   });\n//   return map;\n// };\nconst formatm = {};\nbaseFormats.forEach((f) => {\n  formatm[f.key] = f;\n});\n\nexport default {};\nexport {\n  formatm,\n  baseFormats,\n};\n"]}