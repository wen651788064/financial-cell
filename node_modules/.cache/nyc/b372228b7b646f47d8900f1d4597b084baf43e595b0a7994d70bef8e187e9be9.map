{"version":3,"sources":["cell_range.js"],"names":["CellRange","sri","sci","eri","eci","w","h","ri","ci","args","length","cb","rowFilter","i","j","other","ret","addRet","push","dsr","dsc","der","dec","ref","multiple","refs","split"],"mappings":"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","sourceRoot":"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core","sourcesContent":["import { xy2expr, expr2xy } from './alphabet';\n\nclass CellRange {\n  constructor(sri, sci, eri, eci, w = 0, h = 0) {\n    this.sri = sri;\n    this.sci = sci;\n    this.eri = eri;\n    this.eci = eci;\n    this.w = w;\n    this.h = h;\n  }\n\n  set(sri, sci, eri, eci) {\n    this.sri = sri;\n    this.sci = sci;\n    this.eri = eri;\n    this.eci = eci;\n  }\n\n  multiple() {\n    return this.eri - this.sri > 0 || this.eci - this.sci > 0;\n  }\n\n  // cell-index: ri, ci\n  // cell-ref: A10\n  includes(...args) {\n    let [ri, ci] = [0, 0];\n    if (args.length === 1) {\n      [ci, ri] = expr2xy(args[0]);\n    } else if (args.length === 2) {\n      [ri, ci] = args;\n    }\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    return sri <= ri && ri <= eri && sci <= ci && ci <= eci;\n  }\n\n  each(cb, rowFilter = () => true) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    for (let i = sri; i <= eri; i += 1) {\n      if (rowFilter(i)) {\n        for (let j = sci; j <= eci; j += 1) {\n          cb(i, j);\n        }\n      }\n    }\n  }\n\n  contains(other) {\n    return this.sri <= other.sri\n      && this.sci <= other.sci\n      && this.eri >= other.eri\n      && this.eci >= other.eci;\n  }\n\n  // within\n  within(other) {\n    return this.sri >= other.sri\n      && this.sci >= other.sci\n      && this.eri <= other.eri\n      && this.eci <= other.eci;\n  }\n\n  // disjoint\n  disjoint(other) {\n    return this.sri > other.eri\n      || this.sci > other.eci\n      || other.sri > this.eri\n      || other.sci > this.eci;\n  }\n\n  // intersects\n  intersects(other) {\n    return this.sri <= other.eri\n      && this.sci <= other.eci\n      && other.sri <= this.eri\n      && other.sci <= this.eci;\n  }\n\n  // union\n  union(other) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    return new CellRange(\n      other.sri < sri ? other.sri : sri,\n      other.sci < sci ? other.sci : sci,\n      other.eri > eri ? other.eri : eri,\n      other.eci > eci ? other.eci : eci,\n    );\n  }\n\n  // intersection\n  // intersection(other) {}\n\n  // Returns Array<CellRange> that represents that part of this that does not intersect with other\n  // difference\n  difference(other) {\n    const ret = [];\n    const addRet = (sri, sci, eri, eci) => {\n      ret.push(new CellRange(sri, sci, eri, eci));\n    };\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    const dsr = other.sri - sri;\n    const dsc = other.sci - sci;\n    const der = eri - other.eri;\n    const dec = eci - other.eci;\n    if (dsr > 0) {\n      addRet(sri, sci, other.sri - 1, eci);\n      if (der > 0) {\n        addRet(other.eri + 1, sci, eri, eci);\n        if (dsc > 0) {\n          addRet(other.sri, sci, other.eri, other.sci - 1);\n        }\n        if (dec > 0) {\n          addRet(other.sri, other.eci + 1, other.eri, eci);\n        }\n      } else {\n        if (dsc > 0) {\n          addRet(other.sri, sci, eri, other.sci - 1);\n        }\n        if (dec > 0) {\n          addRet(other.sri, other.eci + 1, eri, eci);\n        }\n      }\n    } else if (der > 0) {\n      addRet(other.eri + 1, sci, eri, eci);\n      if (dsc > 0) {\n        addRet(sri, sci, other.eri, other.sci - 1);\n      }\n      if (dec > 0) {\n        addRet(sri, other.eci + 1, other.eri, eci);\n      }\n    }\n    if (dsc > 0) {\n      addRet(sri, sci, eri, other.sci - 1);\n      if (dec > 0) {\n        addRet(sri, other.eri + 1, eri, eci);\n        if (dsr > 0) {\n          addRet(sri, other.sci, other.sri - 1, other.eci);\n        }\n        if (der > 0) {\n          addRet(other.sri + 1, other.sci, eri, other.eci);\n        }\n      } else {\n        if (dsr > 0) {\n          addRet(sri, other.sci, other.sri - 1, eci);\n        }\n        if (der > 0) {\n          addRet(other.sri + 1, other.sci, eri, eci);\n        }\n      }\n    } else if (dec > 0) {\n      addRet(eri, other.eci + 1, eri, eci);\n      if (dsr > 0) {\n        addRet(sri, sci, other.sri - 1, other.eci);\n      }\n      if (der > 0) {\n        addRet(other.eri + 1, sci, eri, other.eci);\n      }\n    }\n    return ret;\n  }\n\n  size() {\n    return [\n      this.eri - this.sri + 1,\n      this.eci - this.sci + 1,\n    ];\n  }\n\n  toString() {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    let ref = xy2expr(sci, sri);\n    if (this.multiple()) {\n      ref = `${ref}:${xy2expr(eci, eri)}`;\n    }\n    return ref;\n  }\n\n  clone() {\n    const {\n      sri, sci, eri, eci, w, h,\n    } = this;\n    return new CellRange(sri, sci, eri, eci, w, h);\n  }\n\n  /*\n  toJSON() {\n    return this.toString();\n  }\n  */\n\n  equals(other) {\n    return this.eri === other.eri\n      && this.eci === other.eci\n      && this.sri === other.sri\n      && this.sci === other.sci;\n  }\n\n  static valueOf(ref) {\n    // B1:B8, B1 => 1 x 1 cell range\n    const refs = ref.split(':');\n    const [sci, sri] = expr2xy(refs[0]);\n    let [eri, eci] = [sri, sci];\n    if (refs.length > 1) {\n      [eci, eri] = expr2xy(refs[1]);\n    }\n    return new CellRange(sri, sci, eri, eci);\n  }\n}\n\nexport default CellRange;\n\nexport {\n  CellRange,\n};\n"]}