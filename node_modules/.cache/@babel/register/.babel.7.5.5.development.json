{
  "{\"sourceRoot\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"filename\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core/cell_test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core/cell_test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core/cell_test.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core/cell_test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core",
        "sourceFileName": "cell_test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _mocha = require(\"mocha\");\n\nvar _cell = _interopRequireWildcard(require(\"../../src/core/cell\"));\n\nvar _formula = require(\"../../src/core/formula\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _mocha.describe)('infixExprToSuffixExpr', function () {\n  (0, _mocha.it)('should return myname:A1 score:50 when the value is CONCAT(\"my name:\", A1, \" score:\", 50)', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('CONCAT(\"my name:\", A1, \" score:\", 50)').join(''), '\"my name:A1\" score:50CONCAT,4');\n  });\n  (0, _mocha.it)('should return A1B2SUM,2C1C5AVERAGE,350B20++ when the value is AVERAGE(SUM(A1,B2), C1, C5) + 50 + B20', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('AVERAGE(SUM(A1,B2), C1, C5) + 50 + B20').join(''), 'A1B2SUM,2C1C5AVERAGE,350+B20+');\n  });\n  (0, _mocha.it)('should return A1B2B3SUM,3C1C5AVERAGE,350+B20+ when the value is ((AVERAGE(SUM(A1,B2, B3), C1, C5) + 50) + B20)', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('((AVERAGE(SUM(A1,B2, B3), C1, C5) + 50) + B20)').join(''), 'A1B2B3SUM,3C1C5AVERAGE,350+B20+');\n  });\n  (0, _mocha.it)('should return 105-20- when the value is 10-5-20', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('10-5-20').join(''), '105-20-');\n  });\n  (0, _mocha.it)('should return 105-2010*- when the value is 10-5-20*10', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('10-5-20*10').join(''), '105-2010*-');\n  });\n  (0, _mocha.it)('should return 10520*- when the value is 10-5*20', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('10-5*20').join(''), '10520*-');\n  });\n  (0, _mocha.it)('should return 105-20+ when the value is 10-5+20', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('10-5+20').join(''), '105-20+');\n  });\n  (0, _mocha.it)('should return 123*+45*6+7*+ when the value is 1 + 2*3 + (4 * 5 + 6) * 7', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('1+2*3+(4*5+6)*7').join(''), '123*+45*6+7*+');\n  });\n  (0, _mocha.it)('should return 9312*-3*+42/+ when the value is 9+(3-1*2)*3+4/2', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('9+(3-1*2)*3+4/2').join(''), '9312*-3*+42/+');\n  });\n  (0, _mocha.it)('should return 931-+23+*42/+ when the value is (9+(3-1))*(2+3)+4/2', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('(9+(3-1))*(2+3)+4/2').join(''), '931-+23+*42/+');\n  });\n  (0, _mocha.it)('should return SUM(1) when the value is 1SUM,1', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('SUM(1)').join(''), '1SUM');\n  });\n  (0, _mocha.it)('should return SUM() when the value is \"\"', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('SUM()').join(''), 'SUM');\n  });\n  (0, _mocha.it)('should return SUM( when the value is SUM', function () {\n    _assert.default.equal((0, _cell.infixExprToSuffixExpr)('SUM(').join(''), 'SUM');\n  });\n});\n(0, _mocha.describe)('cell', function () {\n  (0, _mocha.describe)('.render()', function () {\n    (0, _mocha.it)('should return 0 + 2 + 2 + 6 + 49 + 20 when the value is =SUM(A1,B2, C1, C5) + 50 + B20', function () {\n      _assert.default.equal(_cell.default.render('=SUM(A1,B2, C1, C5) + 50 + B20', _formula.formulam, function (x, y) {\n        return x + y;\n      }), 0 + 2 + 2 + 6 + 50 + 20);\n    });\n    (0, _mocha.it)('should return 50 + 20 when the value is =50 + B20', function () {\n      _assert.default.equal(_cell.default.render('=50 + B20', _formula.formulam, function (x, y) {\n        return x + y;\n      }), 50 + 20);\n    });\n    (0, _mocha.it)('should return 1 + 500 - 20 when the value is =AVERAGE(A1:A3) + 50 * 10 - B20', function () {\n      _assert.default.equal(_cell.default.render('=AVERAGE(A1:A3) + 50 * 10 - B20', _formula.formulam, function (x, y) {\n        console.log('x:', x, ', y:', y);\n        return x + y;\n      }), 1 + 500 - 20);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNlbGxfdGVzdC5qcyJdLCJuYW1lcyI6WyJhc3NlcnQiLCJlcXVhbCIsImpvaW4iLCJjZWxsIiwicmVuZGVyIiwiZm9ybXVsYW0iLCJ4IiwieSIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVBLHFCQUFTLHVCQUFULEVBQWtDLFlBQU07QUFDdEMsaUJBQUcsMEZBQUgsRUFBK0YsWUFBTTtBQUNuR0Esb0JBQU9DLEtBQVAsQ0FBYSxpQ0FBc0IsdUNBQXRCLEVBQStEQyxJQUEvRCxDQUFvRSxFQUFwRSxDQUFiLEVBQXNGLCtCQUF0RjtBQUNELEdBRkQ7QUFHQSxpQkFBRyxzR0FBSCxFQUEyRyxZQUFNO0FBQy9HRixvQkFBT0MsS0FBUCxDQUFhLGlDQUFzQix3Q0FBdEIsRUFBZ0VDLElBQWhFLENBQXFFLEVBQXJFLENBQWIsRUFBdUYsK0JBQXZGO0FBQ0QsR0FGRDtBQUdBLGlCQUFHLGdIQUFILEVBQXFILFlBQU07QUFDekhGLG9CQUFPQyxLQUFQLENBQWEsaUNBQXNCLGdEQUF0QixFQUF3RUMsSUFBeEUsQ0FBNkUsRUFBN0UsQ0FBYixFQUErRixpQ0FBL0Y7QUFDRCxHQUZEO0FBR0EsaUJBQUcsaURBQUgsRUFBc0QsWUFBTTtBQUMxREYsb0JBQU9DLEtBQVAsQ0FBYSxpQ0FBc0IsU0FBdEIsRUFBaUNDLElBQWpDLENBQXNDLEVBQXRDLENBQWIsRUFBd0QsU0FBeEQ7QUFDRCxHQUZEO0FBR0EsaUJBQUcsdURBQUgsRUFBNEQsWUFBTTtBQUNoRUYsb0JBQU9DLEtBQVAsQ0FBYSxpQ0FBc0IsWUFBdEIsRUFBb0NDLElBQXBDLENBQXlDLEVBQXpDLENBQWIsRUFBMkQsWUFBM0Q7QUFDRCxHQUZEO0FBR0EsaUJBQUcsaURBQUgsRUFBc0QsWUFBTTtBQUMxREYsb0JBQU9DLEtBQVAsQ0FBYSxpQ0FBc0IsU0FBdEIsRUFBaUNDLElBQWpDLENBQXNDLEVBQXRDLENBQWIsRUFBd0QsU0FBeEQ7QUFDRCxHQUZEO0FBR0EsaUJBQUcsaURBQUgsRUFBc0QsWUFBTTtBQUMxREYsb0JBQU9DLEtBQVAsQ0FBYSxpQ0FBc0IsU0FBdEIsRUFBaUNDLElBQWpDLENBQXNDLEVBQXRDLENBQWIsRUFBd0QsU0FBeEQ7QUFDRCxHQUZEO0FBR0EsaUJBQUcseUVBQUgsRUFBOEUsWUFBTTtBQUNsRkYsb0JBQU9DLEtBQVAsQ0FBYSxpQ0FBc0IsaUJBQXRCLEVBQXlDQyxJQUF6QyxDQUE4QyxFQUE5QyxDQUFiLEVBQWdFLGVBQWhFO0FBQ0QsR0FGRDtBQUdBLGlCQUFHLCtEQUFILEVBQW9FLFlBQU07QUFDeEVGLG9CQUFPQyxLQUFQLENBQWEsaUNBQXNCLGlCQUF0QixFQUF5Q0MsSUFBekMsQ0FBOEMsRUFBOUMsQ0FBYixFQUFnRSxlQUFoRTtBQUNELEdBRkQ7QUFHQSxpQkFBRyxtRUFBSCxFQUF3RSxZQUFNO0FBQzVFRixvQkFBT0MsS0FBUCxDQUFhLGlDQUFzQixxQkFBdEIsRUFBNkNDLElBQTdDLENBQWtELEVBQWxELENBQWIsRUFBb0UsZUFBcEU7QUFDRCxHQUZEO0FBR0EsaUJBQUcsK0NBQUgsRUFBb0QsWUFBTTtBQUN4REYsb0JBQU9DLEtBQVAsQ0FBYSxpQ0FBc0IsUUFBdEIsRUFBZ0NDLElBQWhDLENBQXFDLEVBQXJDLENBQWIsRUFBdUQsTUFBdkQ7QUFDRCxHQUZEO0FBR0EsaUJBQUcsMENBQUgsRUFBK0MsWUFBTTtBQUNuREYsb0JBQU9DLEtBQVAsQ0FBYSxpQ0FBc0IsT0FBdEIsRUFBK0JDLElBQS9CLENBQW9DLEVBQXBDLENBQWIsRUFBc0QsS0FBdEQ7QUFDRCxHQUZEO0FBR0EsaUJBQUcsMENBQUgsRUFBK0MsWUFBTTtBQUNuREYsb0JBQU9DLEtBQVAsQ0FBYSxpQ0FBc0IsTUFBdEIsRUFBOEJDLElBQTlCLENBQW1DLEVBQW5DLENBQWIsRUFBcUQsS0FBckQ7QUFDRCxHQUZEO0FBR0QsQ0F4Q0Q7QUEwQ0EscUJBQVMsTUFBVCxFQUFpQixZQUFNO0FBQ3JCLHVCQUFTLFdBQVQsRUFBc0IsWUFBTTtBQUMxQixtQkFBRyx3RkFBSCxFQUE2RixZQUFNO0FBQ2pHRixzQkFBT0MsS0FBUCxDQUFhRSxjQUFLQyxNQUFMLENBQVksZ0NBQVosRUFBOENDLGlCQUE5QyxFQUF3RCxVQUFDQyxDQUFELEVBQUlDLENBQUo7QUFBQSxlQUFVRCxDQUFDLEdBQUdDLENBQWQ7QUFBQSxPQUF4RCxDQUFiLEVBQXVGLElBQUksQ0FBSixHQUFRLENBQVIsR0FBWSxDQUFaLEdBQWdCLEVBQWhCLEdBQXFCLEVBQTVHO0FBQ0QsS0FGRDtBQUdBLG1CQUFHLG1EQUFILEVBQXdELFlBQU07QUFDNURQLHNCQUFPQyxLQUFQLENBQWFFLGNBQUtDLE1BQUwsQ0FBWSxXQUFaLEVBQXlCQyxpQkFBekIsRUFBbUMsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsZUFBVUQsQ0FBQyxHQUFHQyxDQUFkO0FBQUEsT0FBbkMsQ0FBYixFQUFrRSxLQUFLLEVBQXZFO0FBQ0QsS0FGRDtBQUdBLG1CQUFHLDhFQUFILEVBQW1GLFlBQU07QUFDdkZQLHNCQUFPQyxLQUFQLENBQWFFLGNBQUtDLE1BQUwsQ0FBWSxpQ0FBWixFQUErQ0MsaUJBQS9DLEVBQXlELFVBQUNDLENBQUQsRUFBSUMsQ0FBSixFQUFVO0FBQzlFQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxJQUFaLEVBQWtCSCxDQUFsQixFQUFxQixNQUFyQixFQUE2QkMsQ0FBN0I7QUFDQSxlQUFPRCxDQUFDLEdBQUdDLENBQVg7QUFDRCxPQUhZLENBQWIsRUFHSSxJQUFJLEdBQUosR0FBVSxFQUhkO0FBSUQsS0FMRDtBQU1ELEdBYkQ7QUFjRCxDQWZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy93ZW4vRGVza3RvcC93b3JrL3Z1ZS9lZGl0L25vZGVfbW9kdWxlcy94LXNwcmVhZHNoZWV0LW1hc3Rlci90ZXN0L2NvcmUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5pbXBvcnQgeyBkZXNjcmliZSwgaXQgfSBmcm9tICdtb2NoYSc7XG5pbXBvcnQgY2VsbCwgeyBpbmZpeEV4cHJUb1N1ZmZpeEV4cHIgfSBmcm9tICcuLi8uLi9zcmMvY29yZS9jZWxsJztcbmltcG9ydCB7IGZvcm11bGFtIH0gZnJvbSAnLi4vLi4vc3JjL2NvcmUvZm9ybXVsYSc7XG5cbmRlc2NyaWJlKCdpbmZpeEV4cHJUb1N1ZmZpeEV4cHInLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgcmV0dXJuIG15bmFtZTpBMSBzY29yZTo1MCB3aGVuIHRoZSB2YWx1ZSBpcyBDT05DQVQoXCJteSBuYW1lOlwiLCBBMSwgXCIgc2NvcmU6XCIsIDUwKScsICgpID0+IHtcbiAgICBhc3NlcnQuZXF1YWwoaW5maXhFeHByVG9TdWZmaXhFeHByKCdDT05DQVQoXCJteSBuYW1lOlwiLCBBMSwgXCIgc2NvcmU6XCIsIDUwKScpLmpvaW4oJycpLCAnXCJteSBuYW1lOkExXCIgc2NvcmU6NTBDT05DQVQsNCcpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCByZXR1cm4gQTFCMlNVTSwyQzFDNUFWRVJBR0UsMzUwQjIwKysgd2hlbiB0aGUgdmFsdWUgaXMgQVZFUkFHRShTVU0oQTEsQjIpLCBDMSwgQzUpICsgNTAgKyBCMjAnLCAoKSA9PiB7XG4gICAgYXNzZXJ0LmVxdWFsKGluZml4RXhwclRvU3VmZml4RXhwcignQVZFUkFHRShTVU0oQTEsQjIpLCBDMSwgQzUpICsgNTAgKyBCMjAnKS5qb2luKCcnKSwgJ0ExQjJTVU0sMkMxQzVBVkVSQUdFLDM1MCtCMjArJyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHJldHVybiBBMUIyQjNTVU0sM0MxQzVBVkVSQUdFLDM1MCtCMjArIHdoZW4gdGhlIHZhbHVlIGlzICgoQVZFUkFHRShTVU0oQTEsQjIsIEIzKSwgQzEsIEM1KSArIDUwKSArIEIyMCknLCAoKSA9PiB7XG4gICAgYXNzZXJ0LmVxdWFsKGluZml4RXhwclRvU3VmZml4RXhwcignKChBVkVSQUdFKFNVTShBMSxCMiwgQjMpLCBDMSwgQzUpICsgNTApICsgQjIwKScpLmpvaW4oJycpLCAnQTFCMkIzU1VNLDNDMUM1QVZFUkFHRSwzNTArQjIwKycpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCByZXR1cm4gMTA1LTIwLSB3aGVuIHRoZSB2YWx1ZSBpcyAxMC01LTIwJywgKCkgPT4ge1xuICAgIGFzc2VydC5lcXVhbChpbmZpeEV4cHJUb1N1ZmZpeEV4cHIoJzEwLTUtMjAnKS5qb2luKCcnKSwgJzEwNS0yMC0nKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgcmV0dXJuIDEwNS0yMDEwKi0gd2hlbiB0aGUgdmFsdWUgaXMgMTAtNS0yMCoxMCcsICgpID0+IHtcbiAgICBhc3NlcnQuZXF1YWwoaW5maXhFeHByVG9TdWZmaXhFeHByKCcxMC01LTIwKjEwJykuam9pbignJyksICcxMDUtMjAxMCotJyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHJldHVybiAxMDUyMCotIHdoZW4gdGhlIHZhbHVlIGlzIDEwLTUqMjAnLCAoKSA9PiB7XG4gICAgYXNzZXJ0LmVxdWFsKGluZml4RXhwclRvU3VmZml4RXhwcignMTAtNSoyMCcpLmpvaW4oJycpLCAnMTA1MjAqLScpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCByZXR1cm4gMTA1LTIwKyB3aGVuIHRoZSB2YWx1ZSBpcyAxMC01KzIwJywgKCkgPT4ge1xuICAgIGFzc2VydC5lcXVhbChpbmZpeEV4cHJUb1N1ZmZpeEV4cHIoJzEwLTUrMjAnKS5qb2luKCcnKSwgJzEwNS0yMCsnKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgcmV0dXJuIDEyMyorNDUqNis3Kisgd2hlbiB0aGUgdmFsdWUgaXMgMSArIDIqMyArICg0ICogNSArIDYpICogNycsICgpID0+IHtcbiAgICBhc3NlcnQuZXF1YWwoaW5maXhFeHByVG9TdWZmaXhFeHByKCcxKzIqMysoNCo1KzYpKjcnKS5qb2luKCcnKSwgJzEyMyorNDUqNis3KisnKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgcmV0dXJuIDkzMTIqLTMqKzQyLysgd2hlbiB0aGUgdmFsdWUgaXMgOSsoMy0xKjIpKjMrNC8yJywgKCkgPT4ge1xuICAgIGFzc2VydC5lcXVhbChpbmZpeEV4cHJUb1N1ZmZpeEV4cHIoJzkrKDMtMSoyKSozKzQvMicpLmpvaW4oJycpLCAnOTMxMiotMyorNDIvKycpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCByZXR1cm4gOTMxLSsyMysqNDIvKyB3aGVuIHRoZSB2YWx1ZSBpcyAoOSsoMy0xKSkqKDIrMykrNC8yJywgKCkgPT4ge1xuICAgIGFzc2VydC5lcXVhbChpbmZpeEV4cHJUb1N1ZmZpeEV4cHIoJyg5KygzLTEpKSooMiszKSs0LzInKS5qb2luKCcnKSwgJzkzMS0rMjMrKjQyLysnKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgcmV0dXJuIFNVTSgxKSB3aGVuIHRoZSB2YWx1ZSBpcyAxU1VNLDEnLCAoKSA9PiB7XG4gICAgYXNzZXJ0LmVxdWFsKGluZml4RXhwclRvU3VmZml4RXhwcignU1VNKDEpJykuam9pbignJyksICcxU1VNJyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHJldHVybiBTVU0oKSB3aGVuIHRoZSB2YWx1ZSBpcyBcIlwiJywgKCkgPT4ge1xuICAgIGFzc2VydC5lcXVhbChpbmZpeEV4cHJUb1N1ZmZpeEV4cHIoJ1NVTSgpJykuam9pbignJyksICdTVU0nKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgcmV0dXJuIFNVTSggd2hlbiB0aGUgdmFsdWUgaXMgU1VNJywgKCkgPT4ge1xuICAgIGFzc2VydC5lcXVhbChpbmZpeEV4cHJUb1N1ZmZpeEV4cHIoJ1NVTSgnKS5qb2luKCcnKSwgJ1NVTScpO1xuICB9KTtcbn0pO1xuXG5kZXNjcmliZSgnY2VsbCcsICgpID0+IHtcbiAgZGVzY3JpYmUoJy5yZW5kZXIoKScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiAwICsgMiArIDIgKyA2ICsgNDkgKyAyMCB3aGVuIHRoZSB2YWx1ZSBpcyA9U1VNKEExLEIyLCBDMSwgQzUpICsgNTAgKyBCMjAnLCAoKSA9PiB7XG4gICAgICBhc3NlcnQuZXF1YWwoY2VsbC5yZW5kZXIoJz1TVU0oQTEsQjIsIEMxLCBDNSkgKyA1MCArIEIyMCcsIGZvcm11bGFtLCAoeCwgeSkgPT4geCArIHkpLCAwICsgMiArIDIgKyA2ICsgNTAgKyAyMCk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gNTAgKyAyMCB3aGVuIHRoZSB2YWx1ZSBpcyA9NTAgKyBCMjAnLCAoKSA9PiB7XG4gICAgICBhc3NlcnQuZXF1YWwoY2VsbC5yZW5kZXIoJz01MCArIEIyMCcsIGZvcm11bGFtLCAoeCwgeSkgPT4geCArIHkpLCA1MCArIDIwKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHJldHVybiAxICsgNTAwIC0gMjAgd2hlbiB0aGUgdmFsdWUgaXMgPUFWRVJBR0UoQTE6QTMpICsgNTAgKiAxMCAtIEIyMCcsICgpID0+IHtcbiAgICAgIGFzc2VydC5lcXVhbChjZWxsLnJlbmRlcignPUFWRVJBR0UoQTE6QTMpICsgNTAgKiAxMCAtIEIyMCcsIGZvcm11bGFtLCAoeCwgeSkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygneDonLCB4LCAnLCB5OicsIHkpO1xuICAgICAgICByZXR1cm4geCArIHk7XG4gICAgICB9KSwgMSArIDUwMCAtIDIwKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "cell_test.js"
      ],
      "names": [
        "assert",
        "equal",
        "join",
        "cell",
        "render",
        "formulam",
        "x",
        "y",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core",
      "sourcesContent": [
        "import assert from 'assert';\nimport { describe, it } from 'mocha';\nimport cell, { infixExprToSuffixExpr } from '../../src/core/cell';\nimport { formulam } from '../../src/core/formula';\n\ndescribe('infixExprToSuffixExpr', () => {\n  it('should return myname:A1 score:50 when the value is CONCAT(\"my name:\", A1, \" score:\", 50)', () => {\n    assert.equal(infixExprToSuffixExpr('CONCAT(\"my name:\", A1, \" score:\", 50)').join(''), '\"my name:A1\" score:50CONCAT,4');\n  });\n  it('should return A1B2SUM,2C1C5AVERAGE,350B20++ when the value is AVERAGE(SUM(A1,B2), C1, C5) + 50 + B20', () => {\n    assert.equal(infixExprToSuffixExpr('AVERAGE(SUM(A1,B2), C1, C5) + 50 + B20').join(''), 'A1B2SUM,2C1C5AVERAGE,350+B20+');\n  });\n  it('should return A1B2B3SUM,3C1C5AVERAGE,350+B20+ when the value is ((AVERAGE(SUM(A1,B2, B3), C1, C5) + 50) + B20)', () => {\n    assert.equal(infixExprToSuffixExpr('((AVERAGE(SUM(A1,B2, B3), C1, C5) + 50) + B20)').join(''), 'A1B2B3SUM,3C1C5AVERAGE,350+B20+');\n  });\n  it('should return 105-20- when the value is 10-5-20', () => {\n    assert.equal(infixExprToSuffixExpr('10-5-20').join(''), '105-20-');\n  });\n  it('should return 105-2010*- when the value is 10-5-20*10', () => {\n    assert.equal(infixExprToSuffixExpr('10-5-20*10').join(''), '105-2010*-');\n  });\n  it('should return 10520*- when the value is 10-5*20', () => {\n    assert.equal(infixExprToSuffixExpr('10-5*20').join(''), '10520*-');\n  });\n  it('should return 105-20+ when the value is 10-5+20', () => {\n    assert.equal(infixExprToSuffixExpr('10-5+20').join(''), '105-20+');\n  });\n  it('should return 123*+45*6+7*+ when the value is 1 + 2*3 + (4 * 5 + 6) * 7', () => {\n    assert.equal(infixExprToSuffixExpr('1+2*3+(4*5+6)*7').join(''), '123*+45*6+7*+');\n  });\n  it('should return 9312*-3*+42/+ when the value is 9+(3-1*2)*3+4/2', () => {\n    assert.equal(infixExprToSuffixExpr('9+(3-1*2)*3+4/2').join(''), '9312*-3*+42/+');\n  });\n  it('should return 931-+23+*42/+ when the value is (9+(3-1))*(2+3)+4/2', () => {\n    assert.equal(infixExprToSuffixExpr('(9+(3-1))*(2+3)+4/2').join(''), '931-+23+*42/+');\n  });\n  it('should return SUM(1) when the value is 1SUM,1', () => {\n    assert.equal(infixExprToSuffixExpr('SUM(1)').join(''), '1SUM');\n  });\n  it('should return SUM() when the value is \"\"', () => {\n    assert.equal(infixExprToSuffixExpr('SUM()').join(''), 'SUM');\n  });\n  it('should return SUM( when the value is SUM', () => {\n    assert.equal(infixExprToSuffixExpr('SUM(').join(''), 'SUM');\n  });\n});\n\ndescribe('cell', () => {\n  describe('.render()', () => {\n    it('should return 0 + 2 + 2 + 6 + 49 + 20 when the value is =SUM(A1,B2, C1, C5) + 50 + B20', () => {\n      assert.equal(cell.render('=SUM(A1,B2, C1, C5) + 50 + B20', formulam, (x, y) => x + y), 0 + 2 + 2 + 6 + 50 + 20);\n    });\n    it('should return 50 + 20 when the value is =50 + B20', () => {\n      assert.equal(cell.render('=50 + B20', formulam, (x, y) => x + y), 50 + 20);\n    });\n    it('should return 1 + 500 - 20 when the value is =AVERAGE(A1:A3) + 50 * 10 - B20', () => {\n      assert.equal(cell.render('=AVERAGE(A1:A3) + 50 * 10 - B20', formulam, (x, y) => {\n        console.log('x:', x, ', y:', y);\n        return x + y;\n      }), 1 + 500 - 20);\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564718388430
  },
  "{\"sourceRoot\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"filename\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/cell.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/cell.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/cell.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/cell.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
        "sourceFileName": "cell.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.infixExprToSuffixExpr = exports.default = void 0;\n\nvar _alphabet = require(\"./alphabet\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// import XLSX_CALC from \"xlsx-calc\"\n// var formulajs = require('formulajs');\n// Converting infix expression to a suffix expression\n// src: AVERAGE(SUM(A1,A2), B1) + 50 + B20\n// return: [A1, A2], SUM[, B1],AVERAGE,50,+,B20,+\nvar infixExprToSuffixExpr = function infixExprToSuffixExpr(src) {\n  var operatorStack = [];\n  var stack = [];\n  var subStrs = []; // SUM, A1, B2, 50 ...\n\n  var fnArgType = 0; // 1 => , 2 => :\n\n  var fnArgsLen = 1; // A1,A2,A3...\n\n  for (var i = 0; i < src.length; i += 1) {\n    var c = src.charAt(i); // console.log('c:', c);\n\n    if (c !== ' ') {\n      if (c >= 'a' && c <= 'z') {\n        subStrs.push(c.toUpperCase());\n      } else if (c >= '0' && c <= '9' || c >= 'A' && c <= 'Z' || c === '.') {\n        subStrs.push(c);\n      } else if (c === '\"') {\n        i += 1;\n\n        while (src.charAt(i) !== '\"') {\n          subStrs.push(src.charAt(i));\n          i += 1;\n        }\n\n        stack.push(\"\\\"\".concat(subStrs.join('')));\n        subStrs = [];\n      } else {\n        // console.log('subStrs:', subStrs.join(''), stack);\n        if (c !== '(' && subStrs.length > 0) {\n          stack.push(subStrs.join(''));\n        }\n\n        if (c === ')') {\n          var c1 = operatorStack.pop();\n\n          if (fnArgType === 2) {\n            // fn argument range => A1:B5\n            try {\n              var _expr2xy = (0, _alphabet.expr2xy)(stack.pop()),\n                  _expr2xy2 = _slicedToArray(_expr2xy, 2),\n                  ex = _expr2xy2[0],\n                  ey = _expr2xy2[1];\n\n              var _expr2xy3 = (0, _alphabet.expr2xy)(stack.pop()),\n                  _expr2xy4 = _slicedToArray(_expr2xy3, 2),\n                  sx = _expr2xy4[0],\n                  sy = _expr2xy4[1]; // console.log('::', sx, sy, ex, ey);\n\n\n              var rangelen = 0;\n\n              for (var x = sx; x <= ex; x += 1) {\n                for (var y = sy; y <= ey; y += 1) {\n                  stack.push((0, _alphabet.xy2expr)(x, y));\n                  rangelen += 1;\n                }\n              }\n\n              stack.push([c1, rangelen]);\n            } catch (e) {// console.log(e);\n            }\n          } else if (fnArgType === 1) {\n            // fn argument => A1,A2,B5\n            stack.push([c1, fnArgsLen]);\n            fnArgsLen = 1;\n          } else {\n            // console.log('c1:', c1, fnArgType, stack, operatorStack);\n            while (c1 !== '(') {\n              stack.push(c1);\n              if (operatorStack.length <= 0) break;\n              c1 = operatorStack.pop();\n            }\n          }\n\n          fnArgType = 0;\n        } else if (c === ':') {\n          fnArgType = 2;\n        } else if (c === ',') {\n          fnArgType = 1;\n          fnArgsLen += 1;\n        } else if (c === '(' && subStrs.length > 0) {\n          // function\n          operatorStack.push(subStrs.join(''));\n        } else {\n          // priority: */ > +-\n          // console.log(operatorStack, c, stack);\n          if (operatorStack.length > 0 && (c === '+' || c === '-')) {\n            var top = operatorStack[operatorStack.length - 1];\n            if (top !== '(') stack.push(operatorStack.pop());\n\n            if (top === '*' || top === '/') {\n              while (operatorStack.length > 0) {\n                top = operatorStack[operatorStack.length - 1];\n                if (top !== '(') stack.push(operatorStack.pop());else break;\n              }\n            }\n          }\n\n          operatorStack.push(c);\n        }\n\n        subStrs = [];\n      }\n    }\n  }\n\n  if (subStrs.length > 0) {\n    stack.push(subStrs.join(''));\n  }\n\n  while (operatorStack.length > 0) {\n    stack.push(operatorStack.pop());\n  }\n\n  return stack;\n};\n\nexports.infixExprToSuffixExpr = infixExprToSuffixExpr;\n\nvar evalSubExpr = function evalSubExpr(subExpr, cellRender) {\n  if (subExpr[0] >= '0' && subExpr[0] <= '9') {\n    return Number(subExpr);\n  }\n\n  if (subExpr[0] === '\"') {\n    return subExpr.substring(1);\n  }\n\n  var _expr2xy5 = (0, _alphabet.expr2xy)(subExpr),\n      _expr2xy6 = _slicedToArray(_expr2xy5, 2),\n      x = _expr2xy6[0],\n      y = _expr2xy6[1];\n\n  return cellRender(x, y);\n}; // evaluate the suffix expression\n// srcStack: <= infixExprToSufixExpr\n// formulaMap: {'SUM': {}, ...}\n// cellRender: (x, y) => {}\n\n\nvar evalSuffixExpr = function evalSuffixExpr(srcStack, formulaMap, cellRender, cellList) {\n  var stack = []; // console.log(':::::formulaMap:', formulaMap);\n\n  for (var i = 0; i < srcStack.length; i += 1) {\n    // console.log(':::>>>', srcStack[i]);\n    if (srcStack[i] === '+') {\n      var top = stack.pop();\n      stack.push(Number(stack.pop()) + Number(top));\n    } else if (srcStack[i] === '-') {\n      var _top = stack.pop();\n\n      stack.push(Number(stack.pop()) - Number(_top));\n    } else if (srcStack[i] === '*') {\n      stack.push(Number(stack.pop()) * Number(stack.pop()));\n    } else if (srcStack[i] === '/') {\n      var _top2 = stack.pop();\n\n      stack.push(Number(stack.pop()) / Number(_top2));\n    } else if (Array.isArray(srcStack[i])) {\n      var _srcStack$i = _slicedToArray(srcStack[i], 2),\n          formula = _srcStack$i[0],\n          len = _srcStack$i[1];\n\n      var params = [];\n\n      for (var j = 0; j < len; j += 1) {\n        params.push(stack.pop());\n      }\n\n      stack.push(formulaMap[formula].render(params.reverse()));\n    } else {\n      if (cellList.includes(srcStack[i])) {\n        return 0;\n      }\n\n      cellList.push(srcStack[i]);\n      var s = evalSubExpr(srcStack[i], cellRender);\n      stack.push(evalSubExpr(srcStack[i], cellRender));\n    } // console.log('stack:', stack);\n\n  }\n\n  return stack[0];\n};\n\nfunction evalFormula(text, rule) {\n  if (typeof text !== 'string') {\n    return false;\n  }\n\n  if (text.toUpperCase().indexOf(rule.toUpperCase()) == -1) {\n    return false;\n  }\n\n  return true;\n}\n\nvar cellRender = function cellRender(data, sheetbook, y, x, src, formulaMap, getCellText) {\n  var cellList = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];\n\n  if (src[0] === '=' && src[1] !== '=') {\n    // console.log(\"156\", sheetbook.Sheets.Sheet1[xy2expr(x, y)], xy2expr(x, y))\n    if (evalFormula(src.substring(1), \"wland\") || evalFormula(src.substring(1), \"wfr\")) {\n      // let {formula} = data.settings;\n      // formula.wland(formula, data);\n      return src.toUpperCase();\n    } else if (src.substring(1) && sheetbook.Sheets.Sheet1[(0, _alphabet.xy2expr)(x, y)]) {\n      // sheetbook.Sheets.Sheet1[xy2expr(x, y)].f = src.substring(1).toUpperCase();\n      // XLSX_CALC.import_functions(formulajs);\n      // XLSX_CALC(sheetbook);\n      var value = sheetbook.Sheets.Sheet1[(0, _alphabet.xy2expr)(x, y)].v ? sheetbook.Sheets.Sheet1[(0, _alphabet.xy2expr)(x, y)].v : \"NaN\";\n      return value;\n    }\n\n    var stack = infixExprToSuffixExpr(src.substring(1));\n    if (stack.length <= 0) return src;\n    return evalSuffixExpr(stack, formulaMap, function (x, y) {\n      return cellRender(getCellText(x, y), formulaMap, getCellText, cellList, sheetbook);\n    }, cellList);\n  }\n\n  return src;\n};\n\nvar _default = {\n  render: cellRender\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "cell.js"
      ],
      "names": [
        "infixExprToSuffixExpr",
        "src",
        "operatorStack",
        "stack",
        "subStrs",
        "fnArgType",
        "fnArgsLen",
        "i",
        "length",
        "c",
        "charAt",
        "push",
        "toUpperCase",
        "join",
        "c1",
        "pop",
        "ex",
        "ey",
        "sx",
        "sy",
        "rangelen",
        "x",
        "y",
        "e",
        "top",
        "evalSubExpr",
        "subExpr",
        "cellRender",
        "Number",
        "substring",
        "evalSuffixExpr",
        "srcStack",
        "formulaMap",
        "cellList",
        "Array",
        "isArray",
        "formula",
        "len",
        "params",
        "j",
        "render",
        "reverse",
        "includes",
        "s",
        "evalFormula",
        "text",
        "rule",
        "indexOf",
        "data",
        "sheetbook",
        "getCellText",
        "Sheets",
        "Sheet1",
        "value",
        "v"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
      "sourcesContent": [
        "import {expr2xy, xy2expr} from './alphabet';\n// import XLSX_CALC from \"xlsx-calc\"\n// var formulajs = require('formulajs');\n// Converting infix expression to a suffix expression\n// src: AVERAGE(SUM(A1,A2), B1) + 50 + B20\n// return: [A1, A2], SUM[, B1],AVERAGE,50,+,B20,+\nconst infixExprToSuffixExpr = (src) => {\n    const operatorStack = [];\n    const stack = [];\n    let subStrs = []; // SUM, A1, B2, 50 ...\n    let fnArgType = 0; // 1 => , 2 => :\n    let fnArgsLen = 1; // A1,A2,A3...\n    for (let i = 0; i < src.length; i += 1) {\n        const c = src.charAt(i);\n        // console.log('c:', c);\n        if (c !== ' ') {\n            if (c >= 'a' && c <= 'z') {\n                subStrs.push(c.toUpperCase());\n            } else if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || c === '.') {\n                subStrs.push(c);\n            } else if (c === '\"') {\n                i += 1;\n                while (src.charAt(i) !== '\"') {\n                    subStrs.push(src.charAt(i));\n                    i += 1;\n                }\n                stack.push(`\"${subStrs.join('')}`);\n                subStrs = [];\n            } else {\n                // console.log('subStrs:', subStrs.join(''), stack);\n                if (c !== '(' && subStrs.length > 0) {\n                    stack.push(subStrs.join(''));\n                }\n                if (c === ')') {\n                    let c1 = operatorStack.pop();\n                    if (fnArgType === 2) {\n                        // fn argument range => A1:B5\n                        try {\n                            const [ex, ey] = expr2xy(stack.pop());\n                            const [sx, sy] = expr2xy(stack.pop());\n                            // console.log('::', sx, sy, ex, ey);\n                            let rangelen = 0;\n                            for (let x = sx; x <= ex; x += 1) {\n                                for (let y = sy; y <= ey; y += 1) {\n                                    stack.push(xy2expr(x, y));\n                                    rangelen += 1;\n                                }\n                            }\n                            stack.push([c1, rangelen]);\n                        } catch (e) {\n                            // console.log(e);\n                        }\n                    } else if (fnArgType === 1) {\n                        // fn argument => A1,A2,B5\n                        stack.push([c1, fnArgsLen]);\n                        fnArgsLen = 1;\n                    } else {\n                        // console.log('c1:', c1, fnArgType, stack, operatorStack);\n                        while (c1 !== '(') {\n                            stack.push(c1);\n                            if (operatorStack.length <= 0) break;\n                            c1 = operatorStack.pop();\n                        }\n                    }\n                    fnArgType = 0;\n                } else if (c === ':') {\n                    fnArgType = 2;\n                } else if (c === ',') {\n                    fnArgType = 1;\n                    fnArgsLen += 1;\n                } else if (c === '(' && subStrs.length > 0) {\n                    // function\n                    operatorStack.push(subStrs.join(''));\n                } else {\n                    // priority: */ > +-\n                    // console.log(operatorStack, c, stack);\n                    if (operatorStack.length > 0 && (c === '+' || c === '-')) {\n                        let top = operatorStack[operatorStack.length - 1];\n                        if (top !== '(') stack.push(operatorStack.pop());\n                        if (top === '*' || top === '/') {\n                            while (operatorStack.length > 0) {\n                                top = operatorStack[operatorStack.length - 1];\n                                if (top !== '(') stack.push(operatorStack.pop());\n                                else break;\n                            }\n                        }\n                    }\n                    operatorStack.push(c);\n                }\n                subStrs = [];\n            }\n        }\n    }\n    if (subStrs.length > 0) {\n        stack.push(subStrs.join(''));\n    }\n    while (operatorStack.length > 0) {\n        stack.push(operatorStack.pop());\n    }\n    return stack;\n};\n\nconst evalSubExpr = (subExpr, cellRender) => {\n    if (subExpr[0] >= '0' && subExpr[0] <= '9') {\n        return Number(subExpr);\n    }\n    if (subExpr[0] === '\"') {\n        return subExpr.substring(1);\n    }\n    const [x, y] = expr2xy(subExpr);\n    return cellRender(x, y);\n};\n\n// evaluate the suffix expression\n// srcStack: <= infixExprToSufixExpr\n// formulaMap: {'SUM': {}, ...}\n// cellRender: (x, y) => {}\nconst evalSuffixExpr = (srcStack, formulaMap, cellRender, cellList) => {\n    const stack = [];\n    // console.log(':::::formulaMap:', formulaMap);\n    for (let i = 0; i < srcStack.length; i += 1) {\n        // console.log(':::>>>', srcStack[i]);\n        if (srcStack[i] === '+') {\n            const top = stack.pop();\n            stack.push(Number(stack.pop()) + Number(top));\n        } else if (srcStack[i] === '-') {\n            const top = stack.pop();\n            stack.push(Number(stack.pop()) - Number(top));\n        } else if (srcStack[i] === '*') {\n            stack.push(Number(stack.pop()) * Number(stack.pop()));\n        } else if (srcStack[i] === '/') {\n            const top = stack.pop();\n            stack.push(Number(stack.pop()) / Number(top));\n        } else if (Array.isArray(srcStack[i])) {\n            const [formula, len] = srcStack[i];\n            const params = [];\n            for (let j = 0; j < len; j += 1) {\n                params.push(stack.pop());\n            }\n            stack.push(formulaMap[formula].render(params.reverse()));\n        } else {\n            if (cellList.includes(srcStack[i])) {\n                return 0;\n            }\n            cellList.push(srcStack[i]);\n            let s = evalSubExpr(srcStack[i], cellRender)\n            stack.push(evalSubExpr(srcStack[i], cellRender));\n        }\n        // console.log('stack:', stack);\n    }\n    return stack[0];\n};\n\nfunction evalFormula(text, rule) {\n    if (typeof text !== 'string') {\n        return false;\n    }\n    if (text.toUpperCase().indexOf(rule.toUpperCase()) == -1) {\n        return false;\n    }\n    return true;\n}\n\nconst cellRender = (data, sheetbook, y, x, src, formulaMap, getCellText, cellList = []) => {\n    if (src[0] === '=' && src[1] !== '=') {\n        // console.log(\"156\", sheetbook.Sheets.Sheet1[xy2expr(x, y)], xy2expr(x, y))\n        if (evalFormula(src.substring(1), \"wland\") || evalFormula(src.substring(1), \"wfr\")) {\n            // let {formula} = data.settings;\n            // formula.wland(formula, data);\n            return src.toUpperCase();\n        } else if (src.substring(1) && sheetbook.Sheets.Sheet1[xy2expr(x, y)]) {\n            // sheetbook.Sheets.Sheet1[xy2expr(x, y)].f = src.substring(1).toUpperCase();\n            // XLSX_CALC.import_functions(formulajs);\n            // XLSX_CALC(sheetbook);\n            let value = sheetbook.Sheets.Sheet1[xy2expr(x, y)].v ? sheetbook.Sheets.Sheet1[xy2expr(x, y)].v : \"NaN\";\n            return value;\n        }\n        const stack = infixExprToSuffixExpr(src.substring(1));\n        if (stack.length <= 0) return src;\n\n        return evalSuffixExpr(\n            stack,\n            formulaMap,\n            (x, y) => cellRender(getCellText(x, y), formulaMap, getCellText, cellList, sheetbook),\n            cellList,\n        );\n    }\n    return src;\n};\n\nexport default {\n    render: cellRender,\n};\nexport {\n    infixExprToSuffixExpr,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564646785256
  },
  "{\"sourceRoot\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"filename\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/alphabet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/alphabet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/alphabet.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/alphabet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
        "sourceFileName": "alphabet.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringAt = stringAt;\nexports.indexAt = indexAt;\nexports.expr2xy = expr2xy;\nexports.expr2expr = expr2expr;\nexports.xy2expr = xy2expr;\nexports.default = void 0;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nfunction stringAt(index) {\n  var str = '';\n  var cindex = index;\n\n  while (cindex >= alphabets.length) {\n    cindex /= alphabets.length;\n    cindex -= 1;\n    str += alphabets[parseInt(cindex, 10) % alphabets.length];\n  }\n\n  var last = index % alphabets.length;\n  str += alphabets[last];\n  return str;\n}\n\nfunction indexAt(str) {\n  var ret = 0;\n\n  for (var i = 0; i < str.length - 1; i += 1) {\n    var cindex = str.charCodeAt(i) - 65;\n    var exponet = str.length - 1 - i;\n    ret += Math.pow(alphabets.length, exponet) + alphabets.length * cindex;\n  }\n\n  ret += str.charCodeAt(str.length - 1) - 65;\n  return ret;\n} // B10 => x,y\n\n\nfunction expr2xy(src) {\n  var x = '';\n  var y = '';\n\n  for (var i = 0; i < src.length; i += 1) {\n    if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\n      y += src.charAt(i);\n    } else {\n      x += src.charAt(i);\n    }\n  }\n\n  return [indexAt(x), parseInt(y, 10) - 1];\n}\n\nfunction expr2expr(src, xn, yn) {\n  var _expr2xy = expr2xy(src),\n      _expr2xy2 = _slicedToArray(_expr2xy, 2),\n      x = _expr2xy2[0],\n      y = _expr2xy2[1];\n\n  return stringAt(x + xn) + (y + yn);\n} // x,y => B10\n\n\nfunction xy2expr(x, y) {\n  return \"\".concat(stringAt(x)).concat(y + 1);\n}\n\nvar _default = {\n  stringAt: stringAt,\n  indexAt: indexAt,\n  expr2xy: expr2xy,\n  xy2expr: xy2expr,\n  expr2expr: expr2expr\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFscGhhYmV0LmpzIl0sIm5hbWVzIjpbImFscGhhYmV0cyIsInN0cmluZ0F0IiwiaW5kZXgiLCJzdHIiLCJjaW5kZXgiLCJsZW5ndGgiLCJwYXJzZUludCIsImxhc3QiLCJpbmRleEF0IiwicmV0IiwiaSIsImNoYXJDb2RlQXQiLCJleHBvbmV0IiwiZXhwcjJ4eSIsInNyYyIsIngiLCJ5IiwiY2hhckF0IiwiZXhwcjJleHByIiwieG4iLCJ5biIsInh5MmV4cHIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsU0FBUyxHQUFHLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLEVBQTBCLEdBQTFCLEVBQStCLEdBQS9CLEVBQW9DLEdBQXBDLEVBQXlDLEdBQXpDLEVBQThDLEdBQTlDLEVBQW1ELEdBQW5ELEVBQXdELEdBQXhELEVBQTZELEdBQTdELEVBQWtFLEdBQWxFLEVBQXVFLEdBQXZFLEVBQTRFLEdBQTVFLEVBQWlGLEdBQWpGLEVBQXNGLEdBQXRGLEVBQTJGLEdBQTNGLEVBQWdHLEdBQWhHLEVBQXFHLEdBQXJHLEVBQTBHLEdBQTFHLEVBQStHLEdBQS9HLEVBQW9ILEdBQXBILEVBQXlILEdBQXpILEVBQThILEdBQTlILENBQWxCOztBQUVPLFNBQVNDLFFBQVQsQ0FBa0JDLEtBQWxCLEVBQXlCO0FBQzlCLE1BQUlDLEdBQUcsR0FBRyxFQUFWO0FBQ0EsTUFBSUMsTUFBTSxHQUFHRixLQUFiOztBQUNBLFNBQU9FLE1BQU0sSUFBSUosU0FBUyxDQUFDSyxNQUEzQixFQUFtQztBQUNqQ0QsSUFBQUEsTUFBTSxJQUFJSixTQUFTLENBQUNLLE1BQXBCO0FBQ0FELElBQUFBLE1BQU0sSUFBSSxDQUFWO0FBQ0FELElBQUFBLEdBQUcsSUFBSUgsU0FBUyxDQUFDTSxRQUFRLENBQUNGLE1BQUQsRUFBUyxFQUFULENBQVIsR0FBdUJKLFNBQVMsQ0FBQ0ssTUFBbEMsQ0FBaEI7QUFDRDs7QUFDRCxNQUFNRSxJQUFJLEdBQUdMLEtBQUssR0FBR0YsU0FBUyxDQUFDSyxNQUEvQjtBQUNBRixFQUFBQSxHQUFHLElBQUlILFNBQVMsQ0FBQ08sSUFBRCxDQUFoQjtBQUNBLFNBQU9KLEdBQVA7QUFDRDs7QUFFTSxTQUFVSyxPQUFWLENBQWtCTCxHQUFsQixFQUF1QjtBQUM1QixNQUFJTSxHQUFHLEdBQUcsQ0FBVjs7QUFDQSxPQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdQLEdBQUcsQ0FBQ0UsTUFBSixHQUFhLENBQWpDLEVBQW9DSyxDQUFDLElBQUksQ0FBekMsRUFBNEM7QUFDMUMsUUFBTU4sTUFBTSxHQUFHRCxHQUFHLENBQUNRLFVBQUosQ0FBZUQsQ0FBZixJQUFvQixFQUFuQztBQUNBLFFBQU1FLE9BQU8sR0FBR1QsR0FBRyxDQUFDRSxNQUFKLEdBQWEsQ0FBYixHQUFpQkssQ0FBakM7QUFDQUQsSUFBQUEsR0FBRyxJQUFJLFNBQUNULFNBQVMsQ0FBQ0ssTUFBWCxFQUFxQk8sT0FBckIsSUFBaUNaLFNBQVMsQ0FBQ0ssTUFBVixHQUFtQkQsTUFBM0Q7QUFDRDs7QUFDREssRUFBQUEsR0FBRyxJQUFJTixHQUFHLENBQUNRLFVBQUosQ0FBZVIsR0FBRyxDQUFDRSxNQUFKLEdBQWEsQ0FBNUIsSUFBaUMsRUFBeEM7QUFDQSxTQUFPSSxHQUFQO0FBQ0QsQyxDQUVEOzs7QUFDTyxTQUFTSSxPQUFULENBQWlCQyxHQUFqQixFQUFzQjtBQUMzQixNQUFJQyxDQUFDLEdBQUcsRUFBUjtBQUNBLE1BQUlDLENBQUMsR0FBRyxFQUFSOztBQUNBLE9BQUssSUFBSU4sQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0ksR0FBRyxDQUFDVCxNQUF4QixFQUFnQ0ssQ0FBQyxJQUFJLENBQXJDLEVBQXdDO0FBQ3RDLFFBQUlJLEdBQUcsQ0FBQ0csTUFBSixDQUFXUCxDQUFYLEtBQWlCLEdBQWpCLElBQXdCSSxHQUFHLENBQUNHLE1BQUosQ0FBV1AsQ0FBWCxLQUFpQixHQUE3QyxFQUFrRDtBQUNoRE0sTUFBQUEsQ0FBQyxJQUFJRixHQUFHLENBQUNHLE1BQUosQ0FBV1AsQ0FBWCxDQUFMO0FBQ0QsS0FGRCxNQUVPO0FBQ0xLLE1BQUFBLENBQUMsSUFBSUQsR0FBRyxDQUFDRyxNQUFKLENBQVdQLENBQVgsQ0FBTDtBQUNEO0FBQ0Y7O0FBQ0QsU0FBTyxDQUFDRixPQUFPLENBQUNPLENBQUQsQ0FBUixFQUFhVCxRQUFRLENBQUNVLENBQUQsRUFBSSxFQUFKLENBQVIsR0FBa0IsQ0FBL0IsQ0FBUDtBQUNEOztBQUVNLFNBQVNFLFNBQVQsQ0FBbUJKLEdBQW5CLEVBQXdCSyxFQUF4QixFQUE0QkMsRUFBNUIsRUFBZ0M7QUFBQSxpQkFDdEJQLE9BQU8sQ0FBQ0MsR0FBRCxDQURlO0FBQUE7QUFBQSxNQUM5QkMsQ0FEOEI7QUFBQSxNQUMzQkMsQ0FEMkI7O0FBRXJDLFNBQU9mLFFBQVEsQ0FBQ2MsQ0FBQyxHQUFHSSxFQUFMLENBQVIsSUFBb0JILENBQUMsR0FBR0ksRUFBeEIsQ0FBUDtBQUNELEMsQ0FFRDs7O0FBQ08sU0FBU0MsT0FBVCxDQUFpQk4sQ0FBakIsRUFBb0JDLENBQXBCLEVBQXVCO0FBQzVCLG1CQUFVZixRQUFRLENBQUNjLENBQUQsQ0FBbEIsU0FBd0JDLENBQUMsR0FBRyxDQUE1QjtBQUNEOztlQUVjO0FBQ2JmLEVBQUFBLFFBQVEsRUFBUkEsUUFEYTtBQUViTyxFQUFBQSxPQUFPLEVBQVBBLE9BRmE7QUFHYkssRUFBQUEsT0FBTyxFQUFQQSxPQUhhO0FBSWJRLEVBQUFBLE9BQU8sRUFBUEEsT0FKYTtBQUtiSCxFQUFBQSxTQUFTLEVBQVRBO0FBTGEsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvd2VuL0Rlc2t0b3Avd29yay92dWUvZWRpdC9ub2RlX21vZHVsZXMveC1zcHJlYWRzaGVldC1tYXN0ZXIvc3JjL2NvcmUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhbHBoYWJldHMgPSBbJ0EnLCAnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5nQXQoaW5kZXgpIHtcbiAgbGV0IHN0ciA9ICcnO1xuICBsZXQgY2luZGV4ID0gaW5kZXg7XG4gIHdoaWxlIChjaW5kZXggPj0gYWxwaGFiZXRzLmxlbmd0aCkge1xuICAgIGNpbmRleCAvPSBhbHBoYWJldHMubGVuZ3RoO1xuICAgIGNpbmRleCAtPSAxO1xuICAgIHN0ciArPSBhbHBoYWJldHNbcGFyc2VJbnQoY2luZGV4LCAxMCkgJSBhbHBoYWJldHMubGVuZ3RoXTtcbiAgfVxuICBjb25zdCBsYXN0ID0gaW5kZXggJSBhbHBoYWJldHMubGVuZ3RoO1xuICBzdHIgKz0gYWxwaGFiZXRzW2xhc3RdO1xuICByZXR1cm4gc3RyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gIGluZGV4QXQoc3RyKSB7XG4gIGxldCByZXQgPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGggLSAxOyBpICs9IDEpIHtcbiAgICBjb25zdCBjaW5kZXggPSBzdHIuY2hhckNvZGVBdChpKSAtIDY1O1xuICAgIGNvbnN0IGV4cG9uZXQgPSBzdHIubGVuZ3RoIC0gMSAtIGk7XG4gICAgcmV0ICs9IChhbHBoYWJldHMubGVuZ3RoICoqIGV4cG9uZXQpICsgKGFscGhhYmV0cy5sZW5ndGggKiBjaW5kZXgpO1xuICB9XG4gIHJldCArPSBzdHIuY2hhckNvZGVBdChzdHIubGVuZ3RoIC0gMSkgLSA2NTtcbiAgcmV0dXJuIHJldDtcbn1cblxuLy8gQjEwID0+IHgseVxuZXhwb3J0IGZ1bmN0aW9uIGV4cHIyeHkoc3JjKSB7XG4gIGxldCB4ID0gJyc7XG4gIGxldCB5ID0gJyc7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3JjLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKHNyYy5jaGFyQXQoaSkgPj0gJzAnICYmIHNyYy5jaGFyQXQoaSkgPD0gJzknKSB7XG4gICAgICB5ICs9IHNyYy5jaGFyQXQoaSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHggKz0gc3JjLmNoYXJBdChpKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIFtpbmRleEF0KHgpLCBwYXJzZUludCh5LCAxMCkgLSAxXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4cHIyZXhwcihzcmMsIHhuLCB5bikge1xuICBjb25zdCBbeCwgeV0gPSBleHByMnh5KHNyYyk7XG4gIHJldHVybiBzdHJpbmdBdCh4ICsgeG4pICsgKHkgKyB5bik7XG59XG5cbi8vIHgseSA9PiBCMTBcbmV4cG9ydCBmdW5jdGlvbiB4eTJleHByKHgsIHkpIHtcbiAgcmV0dXJuIGAke3N0cmluZ0F0KHgpfSR7eSArIDF9YDtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBzdHJpbmdBdCxcbiAgaW5kZXhBdCxcbiAgZXhwcjJ4eSxcbiAgeHkyZXhwcixcbiAgZXhwcjJleHByLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "alphabet.js"
      ],
      "names": [
        "alphabets",
        "stringAt",
        "index",
        "str",
        "cindex",
        "length",
        "parseInt",
        "last",
        "indexAt",
        "ret",
        "i",
        "charCodeAt",
        "exponet",
        "expr2xy",
        "src",
        "x",
        "y",
        "charAt",
        "expr2expr",
        "xn",
        "yn",
        "xy2expr"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
      "sourcesContent": [
        "const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nexport function stringAt(index) {\n  let str = '';\n  let cindex = index;\n  while (cindex >= alphabets.length) {\n    cindex /= alphabets.length;\n    cindex -= 1;\n    str += alphabets[parseInt(cindex, 10) % alphabets.length];\n  }\n  const last = index % alphabets.length;\n  str += alphabets[last];\n  return str;\n}\n\nexport function  indexAt(str) {\n  let ret = 0;\n  for (let i = 0; i < str.length - 1; i += 1) {\n    const cindex = str.charCodeAt(i) - 65;\n    const exponet = str.length - 1 - i;\n    ret += (alphabets.length ** exponet) + (alphabets.length * cindex);\n  }\n  ret += str.charCodeAt(str.length - 1) - 65;\n  return ret;\n}\n\n// B10 => x,y\nexport function expr2xy(src) {\n  let x = '';\n  let y = '';\n  for (let i = 0; i < src.length; i += 1) {\n    if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\n      y += src.charAt(i);\n    } else {\n      x += src.charAt(i);\n    }\n  }\n  return [indexAt(x), parseInt(y, 10) - 1];\n}\n\nexport function expr2expr(src, xn, yn) {\n  const [x, y] = expr2xy(src);\n  return stringAt(x + xn) + (y + yn);\n}\n\n// x,y => B10\nexport function xy2expr(x, y) {\n  return `${stringAt(x)}${y + 1}`;\n}\n\nexport default {\n  stringAt,\n  indexAt,\n  expr2xy,\n  xy2expr,\n  expr2expr,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564536035111
  },
  "{\"sourceRoot\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"filename\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/formula.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/formula.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/formula.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/formula.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
        "sourceFileName": "formula.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formulaCalc = exports.baseFormulas = exports.formulas = exports.formulam = exports.default = void 0;\n\nvar _locale = require(\"../locale/locale\");\n\nvar _xlsxCalc = _interopRequireDefault(require(\"xlsx-calc\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar formulajs = require('formulajs');\n\nvar baseFormulas = [{\n  key: 'SUM',\n  title: (0, _locale.tf)('formula.sum'),\n  render: function render(ary) {\n    return ary.reduce(function (a, b) {\n      return Number(a) + Number(b);\n    }, 0);\n  }\n}, {\n  key: 'AVERAGE',\n  title: (0, _locale.tf)('formula.average'),\n  render: function render(ary) {\n    return ary.reduce(function (a, b) {\n      return Number(a) + Number(b);\n    }, 0) / ary.length;\n  }\n}, {\n  key: 'MAX',\n  title: (0, _locale.tf)('formula.max'),\n  render: function render(ary) {\n    return Math.max.apply(Math, _toConsumableArray(ary.map(function (v) {\n      return Number(v);\n    })));\n  }\n}, {\n  key: 'MIN',\n  title: (0, _locale.tf)('formula.min'),\n  render: function render(ary) {\n    return Math.min.apply(Math, _toConsumableArray(ary.map(function (v) {\n      return Number(v);\n    })));\n  }\n}, {\n  key: 'CONCAT',\n  title: (0, _locale.tf)('formula.concat'),\n  render: function render(ary) {\n    return ary.join('');\n  }\n}, {\n  key: 'MD.WLAND',\n  title: (0, _locale.tf)('formula.wland'),\n  render: function render(ary) {\n    return ary.join('');\n  }\n}, {\n  key: 'MD.WFR',\n  title: (0, _locale.tf)('formula.wfr'),\n  render: function render(ary) {\n    return ary.join('');\n  }\n}];\nexports.baseFormulas = baseFormulas;\nvar formulas = baseFormulas;\nexports.formulas = formulas;\n\nvar formulaCalc = function formulaCalc() {\n  _xlsxCalc.default.import_functions(formulajs);\n\n  var xlsx_Fx = _xlsxCalc.default.xlsx_Fx;\n  exports.formulas = formulas = [];\n  Object.keys(xlsx_Fx).forEach(function (i) {\n    var args = {\n      key: i,\n      title: i,\n      render: xlsx_Fx[i]\n    };\n    formulas.push(args);\n  });\n  return _xlsxCalc.default;\n}; // const formulas = (formulaAry = []) => {\n//   const formulaMap = {};\n//   baseFormulas.concat(formulaAry).forEach((f) => {\n//     formulaMap[f.key] = f;\n//   });\n//   return formulaMap;\n// };\n\n\nexports.formulaCalc = formulaCalc;\nvar formulam = {};\nexports.formulam = formulam;\nbaseFormulas.forEach(function (f) {\n  formulam[f.key] = f;\n});\nvar _default = {};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm11bGEuanMiXSwibmFtZXMiOlsiZm9ybXVsYWpzIiwicmVxdWlyZSIsImJhc2VGb3JtdWxhcyIsImtleSIsInRpdGxlIiwicmVuZGVyIiwiYXJ5IiwicmVkdWNlIiwiYSIsImIiLCJOdW1iZXIiLCJsZW5ndGgiLCJNYXRoIiwibWF4IiwibWFwIiwidiIsIm1pbiIsImpvaW4iLCJmb3JtdWxhcyIsImZvcm11bGFDYWxjIiwiWExTWF9DQUxDIiwiaW1wb3J0X2Z1bmN0aW9ucyIsInhsc3hfRngiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImkiLCJhcmdzIiwicHVzaCIsImZvcm11bGFtIiwiZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU1BOztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFJQSxTQUFTLEdBQUdDLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUVBLElBQU1DLFlBQVksR0FBRyxDQUNqQjtBQUNJQyxFQUFBQSxHQUFHLEVBQUUsS0FEVDtBQUVJQyxFQUFBQSxLQUFLLEVBQUUsZ0JBQUcsYUFBSCxDQUZYO0FBR0lDLEVBQUFBLE1BQU0sRUFBRSxnQkFBQUMsR0FBRztBQUFBLFdBQUlBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLFVBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLGFBQVVDLE1BQU0sQ0FBQ0YsQ0FBRCxDQUFOLEdBQVlFLE1BQU0sQ0FBQ0QsQ0FBRCxDQUE1QjtBQUFBLEtBQVgsRUFBNEMsQ0FBNUMsQ0FBSjtBQUFBO0FBSGYsQ0FEaUIsRUFNakI7QUFDSU4sRUFBQUEsR0FBRyxFQUFFLFNBRFQ7QUFFSUMsRUFBQUEsS0FBSyxFQUFFLGdCQUFHLGlCQUFILENBRlg7QUFHSUMsRUFBQUEsTUFBTSxFQUFFLGdCQUFBQyxHQUFHO0FBQUEsV0FBSUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsYUFBVUMsTUFBTSxDQUFDRixDQUFELENBQU4sR0FBWUUsTUFBTSxDQUFDRCxDQUFELENBQTVCO0FBQUEsS0FBWCxFQUE0QyxDQUE1QyxJQUFpREgsR0FBRyxDQUFDSyxNQUF6RDtBQUFBO0FBSGYsQ0FOaUIsRUFXakI7QUFDSVIsRUFBQUEsR0FBRyxFQUFFLEtBRFQ7QUFFSUMsRUFBQUEsS0FBSyxFQUFFLGdCQUFHLGFBQUgsQ0FGWDtBQUdJQyxFQUFBQSxNQUFNLEVBQUUsZ0JBQUFDLEdBQUc7QUFBQSxXQUFJTSxJQUFJLENBQUNDLEdBQUwsT0FBQUQsSUFBSSxxQkFBUU4sR0FBRyxDQUFDUSxHQUFKLENBQVEsVUFBQUMsQ0FBQztBQUFBLGFBQUlMLE1BQU0sQ0FBQ0ssQ0FBRCxDQUFWO0FBQUEsS0FBVCxDQUFSLEVBQVI7QUFBQTtBQUhmLENBWGlCLEVBZ0JqQjtBQUNJWixFQUFBQSxHQUFHLEVBQUUsS0FEVDtBQUVJQyxFQUFBQSxLQUFLLEVBQUUsZ0JBQUcsYUFBSCxDQUZYO0FBR0lDLEVBQUFBLE1BQU0sRUFBRSxnQkFBQUMsR0FBRztBQUFBLFdBQUlNLElBQUksQ0FBQ0ksR0FBTCxPQUFBSixJQUFJLHFCQUFRTixHQUFHLENBQUNRLEdBQUosQ0FBUSxVQUFBQyxDQUFDO0FBQUEsYUFBSUwsTUFBTSxDQUFDSyxDQUFELENBQVY7QUFBQSxLQUFULENBQVIsRUFBUjtBQUFBO0FBSGYsQ0FoQmlCLEVBcUJqQjtBQUNJWixFQUFBQSxHQUFHLEVBQUUsUUFEVDtBQUVJQyxFQUFBQSxLQUFLLEVBQUUsZ0JBQUcsZ0JBQUgsQ0FGWDtBQUdJQyxFQUFBQSxNQUFNLEVBQUUsZ0JBQUFDLEdBQUc7QUFBQSxXQUFJQSxHQUFHLENBQUNXLElBQUosQ0FBUyxFQUFULENBQUo7QUFBQTtBQUhmLENBckJpQixFQTBCakI7QUFDSWQsRUFBQUEsR0FBRyxFQUFFLFVBRFQ7QUFFSUMsRUFBQUEsS0FBSyxFQUFFLGdCQUFHLGVBQUgsQ0FGWDtBQUdJQyxFQUFBQSxNQUFNLEVBQUUsZ0JBQUFDLEdBQUc7QUFBQSxXQUFJQSxHQUFHLENBQUNXLElBQUosQ0FBUyxFQUFULENBQUo7QUFBQTtBQUhmLENBMUJpQixFQStCakI7QUFDSWQsRUFBQUEsR0FBRyxFQUFFLFFBRFQ7QUFFSUMsRUFBQUEsS0FBSyxFQUFFLGdCQUFHLGFBQUgsQ0FGWDtBQUdJQyxFQUFBQSxNQUFNLEVBQUUsZ0JBQUFDLEdBQUc7QUFBQSxXQUFJQSxHQUFHLENBQUNXLElBQUosQ0FBUyxFQUFULENBQUo7QUFBQTtBQUhmLENBL0JpQixDQUFyQjs7QUFzQ0EsSUFBSUMsUUFBUSxHQUFHaEIsWUFBZjs7O0FBRUEsSUFBTWlCLFdBQVcsR0FBRyxTQUFkQSxXQUFjLEdBQU07QUFDdEJDLG9CQUFVQyxnQkFBVixDQUEyQnJCLFNBQTNCOztBQUNBLE1BQUlzQixPQUFPLEdBQUdGLGtCQUFVRSxPQUF4QjtBQUNBLHFCQUFBSixRQUFRLEdBQUcsRUFBWDtBQUNBSyxFQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWUYsT0FBWixFQUFxQkcsT0FBckIsQ0FBNkIsVUFBQUMsQ0FBQyxFQUFJO0FBQzlCLFFBQUlDLElBQUksR0FBRztBQUNQeEIsTUFBQUEsR0FBRyxFQUFFdUIsQ0FERTtBQUVQdEIsTUFBQUEsS0FBSyxFQUFFc0IsQ0FGQTtBQUdQckIsTUFBQUEsTUFBTSxFQUFFaUIsT0FBTyxDQUFDSSxDQUFEO0FBSFIsS0FBWDtBQUtBUixJQUFBQSxRQUFRLENBQUNVLElBQVQsQ0FBY0QsSUFBZDtBQUNILEdBUEQ7QUFRQSxTQUFPUCxpQkFBUDtBQUNILENBYkQsQyxDQWVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBQ0EsSUFBTVMsUUFBUSxHQUFHLEVBQWpCOztBQUNBM0IsWUFBWSxDQUFDdUIsT0FBYixDQUFxQixVQUFDSyxDQUFELEVBQU87QUFDeEJELEVBQUFBLFFBQVEsQ0FBQ0MsQ0FBQyxDQUFDM0IsR0FBSCxDQUFSLEdBQWtCMkIsQ0FBbEI7QUFDSCxDQUZEO2VBSWUsRSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvd2VuL0Rlc2t0b3Avd29yay92dWUvZWRpdC9ub2RlX21vZHVsZXMveC1zcHJlYWRzaGVldC1tYXN0ZXIvc3JjL2NvcmUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiBmb3JtdWxhOlxuIGtleVxuIHRpdGxlXG4gcmVuZGVyXG4gKi9cbmltcG9ydCB7dGZ9IGZyb20gJy4uL2xvY2FsZS9sb2NhbGUnO1xuaW1wb3J0IFhMU1hfQ0FMQyBmcm9tIFwieGxzeC1jYWxjXCJcblxudmFyIGZvcm11bGFqcyA9IHJlcXVpcmUoJ2Zvcm11bGFqcycpO1xuXG5jb25zdCBiYXNlRm9ybXVsYXMgPSBbXG4gICAge1xuICAgICAgICBrZXk6ICdTVU0nLFxuICAgICAgICB0aXRsZTogdGYoJ2Zvcm11bGEuc3VtJyksXG4gICAgICAgIHJlbmRlcjogYXJ5ID0+IGFyeS5yZWR1Y2UoKGEsIGIpID0+IE51bWJlcihhKSArIE51bWJlcihiKSwgMCksXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGtleTogJ0FWRVJBR0UnLFxuICAgICAgICB0aXRsZTogdGYoJ2Zvcm11bGEuYXZlcmFnZScpLFxuICAgICAgICByZW5kZXI6IGFyeSA9PiBhcnkucmVkdWNlKChhLCBiKSA9PiBOdW1iZXIoYSkgKyBOdW1iZXIoYiksIDApIC8gYXJ5Lmxlbmd0aCxcbiAgICB9LFxuICAgIHtcbiAgICAgICAga2V5OiAnTUFYJyxcbiAgICAgICAgdGl0bGU6IHRmKCdmb3JtdWxhLm1heCcpLFxuICAgICAgICByZW5kZXI6IGFyeSA9PiBNYXRoLm1heCguLi5hcnkubWFwKHYgPT4gTnVtYmVyKHYpKSksXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGtleTogJ01JTicsXG4gICAgICAgIHRpdGxlOiB0ZignZm9ybXVsYS5taW4nKSxcbiAgICAgICAgcmVuZGVyOiBhcnkgPT4gTWF0aC5taW4oLi4uYXJ5Lm1hcCh2ID0+IE51bWJlcih2KSkpLFxuICAgIH0sXG4gICAge1xuICAgICAgICBrZXk6ICdDT05DQVQnLFxuICAgICAgICB0aXRsZTogdGYoJ2Zvcm11bGEuY29uY2F0JyksXG4gICAgICAgIHJlbmRlcjogYXJ5ID0+IGFyeS5qb2luKCcnKSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAga2V5OiAnTUQuV0xBTkQnLFxuICAgICAgICB0aXRsZTogdGYoJ2Zvcm11bGEud2xhbmQnKSxcbiAgICAgICAgcmVuZGVyOiBhcnkgPT4gYXJ5LmpvaW4oJycpLFxuICAgIH0sXG4gICAge1xuICAgICAgICBrZXk6ICdNRC5XRlInLFxuICAgICAgICB0aXRsZTogdGYoJ2Zvcm11bGEud2ZyJyksXG4gICAgICAgIHJlbmRlcjogYXJ5ID0+IGFyeS5qb2luKCcnKSxcbiAgICB9LFxuXTtcblxubGV0IGZvcm11bGFzID0gYmFzZUZvcm11bGFzO1xuXG5jb25zdCBmb3JtdWxhQ2FsYyA9ICgpID0+IHtcbiAgICBYTFNYX0NBTEMuaW1wb3J0X2Z1bmN0aW9ucyhmb3JtdWxhanMpO1xuICAgIGxldCB4bHN4X0Z4ID0gWExTWF9DQUxDLnhsc3hfRng7XG4gICAgZm9ybXVsYXMgPSBbXTtcbiAgICBPYmplY3Qua2V5cyh4bHN4X0Z4KS5mb3JFYWNoKGkgPT4ge1xuICAgICAgICBsZXQgYXJncyA9IHtcbiAgICAgICAgICAgIGtleTogaSxcbiAgICAgICAgICAgIHRpdGxlOiBpLFxuICAgICAgICAgICAgcmVuZGVyOiB4bHN4X0Z4W2ldXG4gICAgICAgIH1cbiAgICAgICAgZm9ybXVsYXMucHVzaChhcmdzKTtcbiAgICB9KTtcbiAgICByZXR1cm4gWExTWF9DQUxDO1xufTtcblxuLy8gY29uc3QgZm9ybXVsYXMgPSAoZm9ybXVsYUFyeSA9IFtdKSA9PiB7XG4vLyAgIGNvbnN0IGZvcm11bGFNYXAgPSB7fTtcbi8vICAgYmFzZUZvcm11bGFzLmNvbmNhdChmb3JtdWxhQXJ5KS5mb3JFYWNoKChmKSA9PiB7XG4vLyAgICAgZm9ybXVsYU1hcFtmLmtleV0gPSBmO1xuLy8gICB9KTtcbi8vICAgcmV0dXJuIGZvcm11bGFNYXA7XG4vLyB9O1xuY29uc3QgZm9ybXVsYW0gPSB7fTtcbmJhc2VGb3JtdWxhcy5mb3JFYWNoKChmKSA9PiB7XG4gICAgZm9ybXVsYW1bZi5rZXldID0gZjtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB7fTtcblxuZXhwb3J0IHtcbiAgICBmb3JtdWxhbSxcbiAgICBmb3JtdWxhcyxcbiAgICBiYXNlRm9ybXVsYXMsXG4gICAgZm9ybXVsYUNhbGMsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "formula.js"
      ],
      "names": [
        "formulajs",
        "require",
        "baseFormulas",
        "key",
        "title",
        "render",
        "ary",
        "reduce",
        "a",
        "b",
        "Number",
        "length",
        "Math",
        "max",
        "map",
        "v",
        "min",
        "join",
        "formulas",
        "formulaCalc",
        "XLSX_CALC",
        "import_functions",
        "xlsx_Fx",
        "Object",
        "keys",
        "forEach",
        "i",
        "args",
        "push",
        "formulam",
        "f"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
      "sourcesContent": [
        "/**\n formula:\n key\n title\n render\n */\nimport {tf} from '../locale/locale';\nimport XLSX_CALC from \"xlsx-calc\"\n\nvar formulajs = require('formulajs');\n\nconst baseFormulas = [\n    {\n        key: 'SUM',\n        title: tf('formula.sum'),\n        render: ary => ary.reduce((a, b) => Number(a) + Number(b), 0),\n    },\n    {\n        key: 'AVERAGE',\n        title: tf('formula.average'),\n        render: ary => ary.reduce((a, b) => Number(a) + Number(b), 0) / ary.length,\n    },\n    {\n        key: 'MAX',\n        title: tf('formula.max'),\n        render: ary => Math.max(...ary.map(v => Number(v))),\n    },\n    {\n        key: 'MIN',\n        title: tf('formula.min'),\n        render: ary => Math.min(...ary.map(v => Number(v))),\n    },\n    {\n        key: 'CONCAT',\n        title: tf('formula.concat'),\n        render: ary => ary.join(''),\n    },\n    {\n        key: 'MD.WLAND',\n        title: tf('formula.wland'),\n        render: ary => ary.join(''),\n    },\n    {\n        key: 'MD.WFR',\n        title: tf('formula.wfr'),\n        render: ary => ary.join(''),\n    },\n];\n\nlet formulas = baseFormulas;\n\nconst formulaCalc = () => {\n    XLSX_CALC.import_functions(formulajs);\n    let xlsx_Fx = XLSX_CALC.xlsx_Fx;\n    formulas = [];\n    Object.keys(xlsx_Fx).forEach(i => {\n        let args = {\n            key: i,\n            title: i,\n            render: xlsx_Fx[i]\n        }\n        formulas.push(args);\n    });\n    return XLSX_CALC;\n};\n\n// const formulas = (formulaAry = []) => {\n//   const formulaMap = {};\n//   baseFormulas.concat(formulaAry).forEach((f) => {\n//     formulaMap[f.key] = f;\n//   });\n//   return formulaMap;\n// };\nconst formulam = {};\nbaseFormulas.forEach((f) => {\n    formulam[f.key] = f;\n});\n\nexport default {};\n\nexport {\n    formulam,\n    formulas,\n    baseFormulas,\n    formulaCalc,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564626085235
  },
  "{\"sourceRoot\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"filename\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale/locale.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale/locale.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale/locale.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale/locale.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale",
        "sourceFileName": "locale.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.locale = locale;\nexports.t = t;\nexports.tf = tf;\nexports.default = void 0;\n\nvar _en = _interopRequireDefault(require(\"./en\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* global window */\nvar $lang = 'en';\nvar $messages = {\n  en: _en.default\n};\n\nfunction translate(key, messages) {\n  if (messages && messages[$lang]) {\n    var message = messages[$lang];\n    var keys = key.split('.');\n\n    for (var i = 0; i < keys.length; i += 1) {\n      var property = keys[i];\n      var value = message[property];\n      if (i === keys.length - 1) return value;\n      if (!value) return undefined;\n      message = value;\n    }\n  }\n\n  return undefined;\n}\n\nfunction t(key) {\n  var v = translate(key, $messages);\n\n  if (!v && window && window.x && window.x.spreadsheet && window.x.spreadsheet.$messages) {\n    v = translate(key, window.x.spreadsheet.$messages);\n  }\n\n  return v || '';\n}\n\nfunction tf(key) {\n  return function () {\n    return t(key);\n  };\n}\n\nfunction locale(lang, message) {\n  $lang = lang;\n\n  if (message) {\n    $messages[lang] = message;\n  }\n}\n\nvar _default = {\n  t: t\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvY2FsZS5qcyJdLCJuYW1lcyI6WyIkbGFuZyIsIiRtZXNzYWdlcyIsImVuIiwidHJhbnNsYXRlIiwia2V5IiwibWVzc2FnZXMiLCJtZXNzYWdlIiwia2V5cyIsInNwbGl0IiwiaSIsImxlbmd0aCIsInByb3BlcnR5IiwidmFsdWUiLCJ1bmRlZmluZWQiLCJ0IiwidiIsIndpbmRvdyIsIngiLCJzcHJlYWRzaGVldCIsInRmIiwibG9jYWxlIiwibGFuZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBOzs7O0FBREE7QUFHQSxJQUFJQSxLQUFLLEdBQUcsSUFBWjtBQUNBLElBQU1DLFNBQVMsR0FBRztBQUNkQyxFQUFBQSxFQUFFLEVBQUZBO0FBRGMsQ0FBbEI7O0FBSUEsU0FBU0MsU0FBVCxDQUFtQkMsR0FBbkIsRUFBd0JDLFFBQXhCLEVBQWtDO0FBQzlCLE1BQUlBLFFBQVEsSUFBSUEsUUFBUSxDQUFDTCxLQUFELENBQXhCLEVBQWlDO0FBQzdCLFFBQUlNLE9BQU8sR0FBR0QsUUFBUSxDQUFDTCxLQUFELENBQXRCO0FBQ0EsUUFBTU8sSUFBSSxHQUFHSCxHQUFHLENBQUNJLEtBQUosQ0FBVSxHQUFWLENBQWI7O0FBQ0EsU0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixJQUFJLENBQUNHLE1BQXpCLEVBQWlDRCxDQUFDLElBQUksQ0FBdEMsRUFBeUM7QUFDckMsVUFBTUUsUUFBUSxHQUFHSixJQUFJLENBQUNFLENBQUQsQ0FBckI7QUFDQSxVQUFNRyxLQUFLLEdBQUdOLE9BQU8sQ0FBQ0ssUUFBRCxDQUFyQjtBQUNBLFVBQUlGLENBQUMsS0FBS0YsSUFBSSxDQUFDRyxNQUFMLEdBQWMsQ0FBeEIsRUFBMkIsT0FBT0UsS0FBUDtBQUMzQixVQUFJLENBQUNBLEtBQUwsRUFBWSxPQUFPQyxTQUFQO0FBQ1pQLE1BQUFBLE9BQU8sR0FBR00sS0FBVjtBQUNIO0FBQ0o7O0FBQ0QsU0FBT0MsU0FBUDtBQUNIOztBQUVELFNBQVNDLENBQVQsQ0FBV1YsR0FBWCxFQUFnQjtBQUNaLE1BQUlXLENBQUMsR0FBR1osU0FBUyxDQUFDQyxHQUFELEVBQU1ILFNBQU4sQ0FBakI7O0FBQ0EsTUFBSSxDQUFDYyxDQUFELElBQU1DLE1BQU4sSUFBZ0JBLE1BQU0sQ0FBQ0MsQ0FBdkIsSUFBNEJELE1BQU0sQ0FBQ0MsQ0FBUCxDQUFTQyxXQUFyQyxJQUFvREYsTUFBTSxDQUFDQyxDQUFQLENBQVNDLFdBQVQsQ0FBcUJqQixTQUE3RSxFQUF3RjtBQUNwRmMsSUFBQUEsQ0FBQyxHQUFHWixTQUFTLENBQUNDLEdBQUQsRUFBTVksTUFBTSxDQUFDQyxDQUFQLENBQVNDLFdBQVQsQ0FBcUJqQixTQUEzQixDQUFiO0FBQ0g7O0FBQ0QsU0FBT2MsQ0FBQyxJQUFJLEVBQVo7QUFDSDs7QUFFRCxTQUFTSSxFQUFULENBQVlmLEdBQVosRUFBaUI7QUFDYixTQUFPO0FBQUEsV0FBTVUsQ0FBQyxDQUFDVixHQUFELENBQVA7QUFBQSxHQUFQO0FBQ0g7O0FBRUQsU0FBU2dCLE1BQVQsQ0FBZ0JDLElBQWhCLEVBQXNCZixPQUF0QixFQUErQjtBQUMzQk4sRUFBQUEsS0FBSyxHQUFHcUIsSUFBUjs7QUFDQSxNQUFJZixPQUFKLEVBQWE7QUFDVEwsSUFBQUEsU0FBUyxDQUFDb0IsSUFBRCxDQUFULEdBQWtCZixPQUFsQjtBQUNIO0FBQ0o7O2VBRWM7QUFDWFEsRUFBQUEsQ0FBQyxFQUFEQTtBQURXLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dlbi9EZXNrdG9wL3dvcmsvdnVlL2VkaXQvbm9kZV9tb2R1bGVzL3gtc3ByZWFkc2hlZXQtbWFzdGVyL3NyYy9sb2NhbGUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgd2luZG93ICovXG5pbXBvcnQgZW4gZnJvbSAnLi9lbic7XG5cbmxldCAkbGFuZyA9ICdlbic7XG5jb25zdCAkbWVzc2FnZXMgPSB7XG4gICAgZW4sXG59O1xuXG5mdW5jdGlvbiB0cmFuc2xhdGUoa2V5LCBtZXNzYWdlcykge1xuICAgIGlmIChtZXNzYWdlcyAmJiBtZXNzYWdlc1skbGFuZ10pIHtcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSBtZXNzYWdlc1skbGFuZ107XG4gICAgICAgIGNvbnN0IGtleXMgPSBrZXkuc3BsaXQoJy4nKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICBjb25zdCBwcm9wZXJ0eSA9IGtleXNbaV07XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IG1lc3NhZ2VbcHJvcGVydHldO1xuICAgICAgICAgICAgaWYgKGkgPT09IGtleXMubGVuZ3RoIC0gMSkgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIG1lc3NhZ2UgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiB0KGtleSkge1xuICAgIGxldCB2ID0gdHJhbnNsYXRlKGtleSwgJG1lc3NhZ2VzKTtcbiAgICBpZiAoIXYgJiYgd2luZG93ICYmIHdpbmRvdy54ICYmIHdpbmRvdy54LnNwcmVhZHNoZWV0ICYmIHdpbmRvdy54LnNwcmVhZHNoZWV0LiRtZXNzYWdlcykge1xuICAgICAgICB2ID0gdHJhbnNsYXRlKGtleSwgd2luZG93Lnguc3ByZWFkc2hlZXQuJG1lc3NhZ2VzKTtcbiAgICB9XG4gICAgcmV0dXJuIHYgfHwgJyc7XG59XG5cbmZ1bmN0aW9uIHRmKGtleSkge1xuICAgIHJldHVybiAoKSA9PiB0KGtleSk7XG59XG5cbmZ1bmN0aW9uIGxvY2FsZShsYW5nLCBtZXNzYWdlKSB7XG4gICAgJGxhbmcgPSBsYW5nO1xuICAgIGlmIChtZXNzYWdlKSB7XG4gICAgICAgICRtZXNzYWdlc1tsYW5nXSA9IG1lc3NhZ2U7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgdCxcbn07XG5cbmV4cG9ydCB7XG4gICAgbG9jYWxlLFxuICAgIHQsXG4gICAgdGYsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "locale.js"
      ],
      "names": [
        "$lang",
        "$messages",
        "en",
        "translate",
        "key",
        "messages",
        "message",
        "keys",
        "split",
        "i",
        "length",
        "property",
        "value",
        "undefined",
        "t",
        "v",
        "window",
        "x",
        "spreadsheet",
        "tf",
        "locale",
        "lang"
      ],
      "mappings": ";;;;;;;;;;AACA;;;;AADA;AAGA,IAAIA,KAAK,GAAG,IAAZ;AACA,IAAMC,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAFA;AADc,CAAlB;;AAIA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAC9B,MAAIA,QAAQ,IAAIA,QAAQ,CAACL,KAAD,CAAxB,EAAiC;AAC7B,QAAIM,OAAO,GAAGD,QAAQ,CAACL,KAAD,CAAtB;AACA,QAAMO,IAAI,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACrC,UAAME,QAAQ,GAAGJ,IAAI,CAACE,CAAD,CAArB;AACA,UAAMG,KAAK,GAAGN,OAAO,CAACK,QAAD,CAArB;AACA,UAAIF,CAAC,KAAKF,IAAI,CAACG,MAAL,GAAc,CAAxB,EAA2B,OAAOE,KAAP;AAC3B,UAAI,CAACA,KAAL,EAAY,OAAOC,SAAP;AACZP,MAAAA,OAAO,GAAGM,KAAV;AACH;AACJ;;AACD,SAAOC,SAAP;AACH;;AAED,SAASC,CAAT,CAAWV,GAAX,EAAgB;AACZ,MAAIW,CAAC,GAAGZ,SAAS,CAACC,GAAD,EAAMH,SAAN,CAAjB;;AACA,MAAI,CAACc,CAAD,IAAMC,MAAN,IAAgBA,MAAM,CAACC,CAAvB,IAA4BD,MAAM,CAACC,CAAP,CAASC,WAArC,IAAoDF,MAAM,CAACC,CAAP,CAASC,WAAT,CAAqBjB,SAA7E,EAAwF;AACpFc,IAAAA,CAAC,GAAGZ,SAAS,CAACC,GAAD,EAAMY,MAAM,CAACC,CAAP,CAASC,WAAT,CAAqBjB,SAA3B,CAAb;AACH;;AACD,SAAOc,CAAC,IAAI,EAAZ;AACH;;AAED,SAASI,EAAT,CAAYf,GAAZ,EAAiB;AACb,SAAO;AAAA,WAAMU,CAAC,CAACV,GAAD,CAAP;AAAA,GAAP;AACH;;AAED,SAASgB,MAAT,CAAgBC,IAAhB,EAAsBf,OAAtB,EAA+B;AAC3BN,EAAAA,KAAK,GAAGqB,IAAR;;AACA,MAAIf,OAAJ,EAAa;AACTL,IAAAA,SAAS,CAACoB,IAAD,CAAT,GAAkBf,OAAlB;AACH;AACJ;;eAEc;AACXQ,EAAAA,CAAC,EAADA;AADW,C",
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale",
      "sourcesContent": [
        "/* global window */\nimport en from './en';\n\nlet $lang = 'en';\nconst $messages = {\n    en,\n};\n\nfunction translate(key, messages) {\n    if (messages && messages[$lang]) {\n        let message = messages[$lang];\n        const keys = key.split('.');\n        for (let i = 0; i < keys.length; i += 1) {\n            const property = keys[i];\n            const value = message[property];\n            if (i === keys.length - 1) return value;\n            if (!value) return undefined;\n            message = value;\n        }\n    }\n    return undefined;\n}\n\nfunction t(key) {\n    let v = translate(key, $messages);\n    if (!v && window && window.x && window.x.spreadsheet && window.x.spreadsheet.$messages) {\n        v = translate(key, window.x.spreadsheet.$messages);\n    }\n    return v || '';\n}\n\nfunction tf(key) {\n    return () => t(key);\n}\n\nfunction locale(lang, message) {\n    $lang = lang;\n    if (message) {\n        $messages[lang] = message;\n    }\n}\n\nexport default {\n    t,\n};\n\nexport {\n    locale,\n    t,\n    tf,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564536035117
  },
  "{\"sourceRoot\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"filename\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale/en.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale/en.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale/en.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale/en.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale",
        "sourceFileName": "en.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  toolbar: {\n    undo: 'Undo',\n    redo: 'Redo',\n    paintformat: 'Paint format',\n    clearformat: 'Clear format',\n    format: 'Format',\n    font: 'Font',\n    fontSize: 'Font size',\n    fontBold: 'Font bold',\n    fontItalic: 'Font italic',\n    underline: 'Underline',\n    strike: 'Strike',\n    textColor: 'Text color',\n    fillColor: 'Fill color',\n    border: 'Borders',\n    merge: 'Merge cells',\n    align: 'Horizontal align',\n    valign: 'Vertical align',\n    textwrap: 'Text wrapping',\n    freeze: 'Freeze cell',\n    add: 'display equation',\n    autofilter: 'Filter',\n    formula: 'Functions',\n    more: 'More',\n    flexible: 'Flexible'\n  },\n  contextmenu: {\n    copy: 'Copy',\n    cut: 'Cut',\n    paste: 'Paste',\n    pasteValue: 'Paste values only',\n    pasteFormat: 'Paste format only',\n    insertRow: 'Insert row',\n    insertColumn: 'Insert column',\n    deleteRow: 'Delete row',\n    deleteColumn: 'Delete column',\n    deleteCell: 'Delete cell',\n    deleteCellText: 'Delete cell text',\n    validation: 'Data validations'\n  },\n  format: {\n    normal: 'Normal',\n    text: 'Plain Text',\n    number: 'Number',\n    percent: 'Percent',\n    rmb: 'RMB',\n    usd: 'USD',\n    date: 'Date',\n    time: 'Time',\n    datetime: 'Date time',\n    duration: 'Duration'\n  },\n  formula: {\n    sum: 'Sum',\n    average: 'Average',\n    max: 'Max',\n    min: 'Min',\n    concat: 'Concat',\n    wland: 'MD.WLAND',\n    wfr: 'MD.WFR'\n  },\n  validation: {\n    required: 'it must be required',\n    notMatch: 'it not match its validation rule',\n    between: 'it is between {} and {}',\n    notBetween: 'it is not between {} and {}',\n    notIn: 'it is not in list',\n    equal: 'it equal to {}',\n    notEqual: 'it not equal to {}',\n    lessThan: 'it less than {}',\n    lessThanEqual: 'it less than or equal to {}',\n    greaterThan: 'it greater than {}',\n    greaterThanEqual: 'it greater than or equal to {}'\n  },\n  error: {\n    pasteForMergedCell: 'Unable to do this for merged cells'\n  },\n  calendar: {\n    weeks: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  },\n  button: {\n    cancel: 'Cancel',\n    remove: 'Remove',\n    save: 'Save',\n    ok: 'OK'\n  },\n  sort: {\n    desc: 'Sort Z -> A',\n    asc: 'Sort A -> Z'\n  },\n  filter: {\n    empty: 'empty'\n  },\n  dataValidation: {\n    mode: 'Mode',\n    range: 'Cell Range',\n    criteria: 'Criteria',\n    modeType: {\n      cell: 'Cell',\n      column: 'Colun',\n      row: 'Row'\n    },\n    type: {\n      list: 'List',\n      number: 'Number',\n      date: 'Date',\n      phone: 'Phone',\n      email: 'Email'\n    },\n    operator: {\n      be: 'between',\n      nbe: 'not betwwen',\n      lt: 'less than',\n      lte: 'less than or equal to',\n      gt: 'greater than',\n      gte: 'greater than or equal to',\n      eq: 'equal to',\n      neq: 'not equal to'\n    }\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "en.js"
      ],
      "names": [
        "toolbar",
        "undo",
        "redo",
        "paintformat",
        "clearformat",
        "format",
        "font",
        "fontSize",
        "fontBold",
        "fontItalic",
        "underline",
        "strike",
        "textColor",
        "fillColor",
        "border",
        "merge",
        "align",
        "valign",
        "textwrap",
        "freeze",
        "add",
        "autofilter",
        "formula",
        "more",
        "flexible",
        "contextmenu",
        "copy",
        "cut",
        "paste",
        "pasteValue",
        "pasteFormat",
        "insertRow",
        "insertColumn",
        "deleteRow",
        "deleteColumn",
        "deleteCell",
        "deleteCellText",
        "validation",
        "normal",
        "text",
        "number",
        "percent",
        "rmb",
        "usd",
        "date",
        "time",
        "datetime",
        "duration",
        "sum",
        "average",
        "max",
        "min",
        "concat",
        "wland",
        "wfr",
        "required",
        "notMatch",
        "between",
        "notBetween",
        "notIn",
        "equal",
        "notEqual",
        "lessThan",
        "lessThanEqual",
        "greaterThan",
        "greaterThanEqual",
        "error",
        "pasteForMergedCell",
        "calendar",
        "weeks",
        "months",
        "button",
        "cancel",
        "remove",
        "save",
        "ok",
        "sort",
        "desc",
        "asc",
        "filter",
        "empty",
        "dataValidation",
        "mode",
        "range",
        "criteria",
        "modeType",
        "cell",
        "column",
        "row",
        "type",
        "list",
        "phone",
        "email",
        "operator",
        "be",
        "nbe",
        "lt",
        "lte",
        "gt",
        "gte",
        "eq",
        "neq"
      ],
      "mappings": ";;;;;;eAAe;AACXA,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,IAAI,EAAE,MAFD;AAGLC,IAAAA,WAAW,EAAE,cAHR;AAILC,IAAAA,WAAW,EAAE,cAJR;AAKLC,IAAAA,MAAM,EAAE,QALH;AAMLC,IAAAA,IAAI,EAAE,MAND;AAOLC,IAAAA,QAAQ,EAAE,WAPL;AAQLC,IAAAA,QAAQ,EAAE,WARL;AASLC,IAAAA,UAAU,EAAE,aATP;AAULC,IAAAA,SAAS,EAAE,WAVN;AAWLC,IAAAA,MAAM,EAAE,QAXH;AAYLC,IAAAA,SAAS,EAAE,YAZN;AAaLC,IAAAA,SAAS,EAAE,YAbN;AAcLC,IAAAA,MAAM,EAAE,SAdH;AAeLC,IAAAA,KAAK,EAAE,aAfF;AAgBLC,IAAAA,KAAK,EAAE,kBAhBF;AAiBLC,IAAAA,MAAM,EAAE,gBAjBH;AAkBLC,IAAAA,QAAQ,EAAE,eAlBL;AAmBLC,IAAAA,MAAM,EAAE,aAnBH;AAoBLC,IAAAA,GAAG,EAAE,kBApBA;AAqBLC,IAAAA,UAAU,EAAE,QArBP;AAsBLC,IAAAA,OAAO,EAAE,WAtBJ;AAuBLC,IAAAA,IAAI,EAAE,MAvBD;AAwBLC,IAAAA,QAAQ,EAAE;AAxBL,GADE;AA2BXC,EAAAA,WAAW,EAAE;AACTC,IAAAA,IAAI,EAAE,MADG;AAETC,IAAAA,GAAG,EAAE,KAFI;AAGTC,IAAAA,KAAK,EAAE,OAHE;AAITC,IAAAA,UAAU,EAAE,mBAJH;AAKTC,IAAAA,WAAW,EAAE,mBALJ;AAMTC,IAAAA,SAAS,EAAE,YANF;AAOTC,IAAAA,YAAY,EAAE,eAPL;AAQTC,IAAAA,SAAS,EAAE,YARF;AASTC,IAAAA,YAAY,EAAE,eATL;AAUTC,IAAAA,UAAU,EAAE,aAVH;AAWTC,IAAAA,cAAc,EAAE,kBAXP;AAYTC,IAAAA,UAAU,EAAE;AAZH,GA3BF;AAyCXhC,EAAAA,MAAM,EAAE;AACJiC,IAAAA,MAAM,EAAE,QADJ;AAEJC,IAAAA,IAAI,EAAE,YAFF;AAGJC,IAAAA,MAAM,EAAE,QAHJ;AAIJC,IAAAA,OAAO,EAAE,SAJL;AAKJC,IAAAA,GAAG,EAAE,KALD;AAMJC,IAAAA,GAAG,EAAE,KAND;AAOJC,IAAAA,IAAI,EAAE,MAPF;AAQJC,IAAAA,IAAI,EAAE,MARF;AASJC,IAAAA,QAAQ,EAAE,WATN;AAUJC,IAAAA,QAAQ,EAAE;AAVN,GAzCG;AAqDXzB,EAAAA,OAAO,EAAE;AACL0B,IAAAA,GAAG,EAAE,KADA;AAELC,IAAAA,OAAO,EAAE,SAFJ;AAGLC,IAAAA,GAAG,EAAE,KAHA;AAILC,IAAAA,GAAG,EAAE,KAJA;AAKLC,IAAAA,MAAM,EAAE,QALH;AAMLC,IAAAA,KAAK,EAAE,UANF;AAOLC,IAAAA,GAAG,EAAE;AAPA,GArDE;AA8DXjB,EAAAA,UAAU,EAAE;AACRkB,IAAAA,QAAQ,EAAE,qBADF;AAERC,IAAAA,QAAQ,EAAE,kCAFF;AAGRC,IAAAA,OAAO,EAAE,yBAHD;AAIRC,IAAAA,UAAU,EAAE,6BAJJ;AAKRC,IAAAA,KAAK,EAAE,mBALC;AAMRC,IAAAA,KAAK,EAAE,gBANC;AAORC,IAAAA,QAAQ,EAAE,oBAPF;AAQRC,IAAAA,QAAQ,EAAE,iBARF;AASRC,IAAAA,aAAa,EAAE,6BATP;AAURC,IAAAA,WAAW,EAAE,oBAVL;AAWRC,IAAAA,gBAAgB,EAAE;AAXV,GA9DD;AA2EXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,kBAAkB,EAAE;AADjB,GA3EI;AA8EXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CADD;AAENC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G;AAFF,GA9EC;AAkFXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,QADJ;AAEJC,IAAAA,MAAM,EAAE,QAFJ;AAGJC,IAAAA,IAAI,EAAE,MAHF;AAIJC,IAAAA,EAAE,EAAE;AAJA,GAlFG;AAwFXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE,aADJ;AAEFC,IAAAA,GAAG,EAAE;AAFH,GAxFK;AA4FXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GA5FG;AA+FXC,EAAAA,cAAc,EAAE;AACZC,IAAAA,IAAI,EAAE,MADM;AAEZC,IAAAA,KAAK,EAAE,YAFK;AAGZC,IAAAA,QAAQ,EAAE,UAHE;AAIZC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE,MADA;AAENC,MAAAA,MAAM,EAAE,OAFF;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAJE;AASZC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE,MADJ;AAEFlD,MAAAA,MAAM,EAAE,QAFN;AAGFI,MAAAA,IAAI,EAAE,MAHJ;AAIF+C,MAAAA,KAAK,EAAE,OAJL;AAKFC,MAAAA,KAAK,EAAE;AALL,KATM;AAgBZC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,EAAE,EAAE,SADE;AAENC,MAAAA,GAAG,EAAE,aAFC;AAGNC,MAAAA,EAAE,EAAE,WAHE;AAINC,MAAAA,GAAG,EAAE,uBAJC;AAKNC,MAAAA,EAAE,EAAE,cALE;AAMNC,MAAAA,GAAG,EAAE,0BANC;AAONC,MAAAA,EAAE,EAAE,UAPE;AAQNC,MAAAA,GAAG,EAAE;AARC;AAhBE;AA/FL,C",
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/locale",
      "sourcesContent": [
        "export default {\n    toolbar: {\n        undo: 'Undo',\n        redo: 'Redo',\n        paintformat: 'Paint format',\n        clearformat: 'Clear format',\n        format: 'Format',\n        font: 'Font',\n        fontSize: 'Font size',\n        fontBold: 'Font bold',\n        fontItalic: 'Font italic',\n        underline: 'Underline',\n        strike: 'Strike',\n        textColor: 'Text color',\n        fillColor: 'Fill color',\n        border: 'Borders',\n        merge: 'Merge cells',\n        align: 'Horizontal align',\n        valign: 'Vertical align',\n        textwrap: 'Text wrapping',\n        freeze: 'Freeze cell',\n        add: 'display equation',\n        autofilter: 'Filter',\n        formula: 'Functions',\n        more: 'More',\n        flexible: 'Flexible',\n    },\n    contextmenu: {\n        copy: 'Copy',\n        cut: 'Cut',\n        paste: 'Paste',\n        pasteValue: 'Paste values only',\n        pasteFormat: 'Paste format only',\n        insertRow: 'Insert row',\n        insertColumn: 'Insert column',\n        deleteRow: 'Delete row',\n        deleteColumn: 'Delete column',\n        deleteCell: 'Delete cell',\n        deleteCellText: 'Delete cell text',\n        validation: 'Data validations',\n    },\n    format: {\n        normal: 'Normal',\n        text: 'Plain Text',\n        number: 'Number',\n        percent: 'Percent',\n        rmb: 'RMB',\n        usd: 'USD',\n        date: 'Date',\n        time: 'Time',\n        datetime: 'Date time',\n        duration: 'Duration',\n    },\n    formula: {\n        sum: 'Sum',\n        average: 'Average',\n        max: 'Max',\n        min: 'Min',\n        concat: 'Concat',\n        wland: 'MD.WLAND',\n        wfr: 'MD.WFR',\n    },\n    validation: {\n        required: 'it must be required',\n        notMatch: 'it not match its validation rule',\n        between: 'it is between {} and {}',\n        notBetween: 'it is not between {} and {}',\n        notIn: 'it is not in list',\n        equal: 'it equal to {}',\n        notEqual: 'it not equal to {}',\n        lessThan: 'it less than {}',\n        lessThanEqual: 'it less than or equal to {}',\n        greaterThan: 'it greater than {}',\n        greaterThanEqual: 'it greater than or equal to {}',\n    },\n    error: {\n        pasteForMergedCell: 'Unable to do this for merged cells',\n    },\n    calendar: {\n        weeks: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    },\n    button: {\n        cancel: 'Cancel',\n        remove: 'Remove',\n        save: 'Save',\n        ok: 'OK',\n    },\n    sort: {\n        desc: 'Sort Z -> A',\n        asc: 'Sort A -> Z',\n    },\n    filter: {\n        empty: 'empty',\n    },\n    dataValidation: {\n        mode: 'Mode',\n        range: 'Cell Range',\n        criteria: 'Criteria',\n        modeType: {\n            cell: 'Cell',\n            column: 'Colun',\n            row: 'Row',\n        },\n        type: {\n            list: 'List',\n            number: 'Number',\n            date: 'Date',\n            phone: 'Phone',\n            email: 'Email',\n        },\n        operator: {\n            be: 'between',\n            nbe: 'not betwwen',\n            lt: 'less than',\n            lte: 'less than or equal to',\n            gt: 'greater than',\n            gte: 'greater than or equal to',\n            eq: 'equal to',\n            neq: 'not equal to',\n        },\n    },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564536035116
  },
  "{\"sourceRoot\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"filename\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core/selectors_test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core/selectors_test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core/selectors_test.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core/selectors_test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core",
        "sourceFileName": "selectors_test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _mocha = require(\"mocha\");\n\nvar _operator = require(\"../../src/core/operator\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _mocha.describe)('infixExprToSuffixExpr', function () {\n  (0, _mocha.it)('test 1 == 1', function () {\n    _assert.default.equal(1, 1);\n  });\n  (0, _mocha.it)('test cut', function () {\n    var arr = (0, _operator.cutStr)(\"=A1+A2+ADD(A3, A4)+'A7'+1\");\n    console.log(\"arr: \", arr);\n    var a = ['A1', 'A2', 'A3', 'A4'];\n\n    _assert.default.deepStrictEqual(arr, a);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbGVjdG9yc190ZXN0LmpzIl0sIm5hbWVzIjpbImFzc2VydCIsImVxdWFsIiwiYXJyIiwiY29uc29sZSIsImxvZyIsImEiLCJkZWVwU3RyaWN0RXF1YWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxxQkFBUyx1QkFBVCxFQUFrQyxZQUFNO0FBQ3BDLGlCQUFHLGFBQUgsRUFBa0IsWUFBTTtBQUNwQkEsb0JBQU9DLEtBQVAsQ0FBYSxDQUFiLEVBQWdCLENBQWhCO0FBQ0gsR0FGRDtBQUlBLGlCQUFHLFVBQUgsRUFBZSxZQUFNO0FBQ2pCLFFBQUlDLEdBQUcsR0FBRyxzQkFBTywyQkFBUCxDQUFWO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVosRUFBcUJGLEdBQXJCO0FBQ0EsUUFBSUcsQ0FBQyxHQUFHLENBQUMsSUFBRCxFQUFPLElBQVAsRUFBYSxJQUFiLEVBQW1CLElBQW5CLENBQVI7O0FBQ0FMLG9CQUFPTSxlQUFQLENBQXVCSixHQUF2QixFQUE0QkcsQ0FBNUI7QUFDSCxHQUxEO0FBTUgsQ0FYRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvd2VuL0Rlc2t0b3Avd29yay92dWUvZWRpdC9ub2RlX21vZHVsZXMveC1zcHJlYWRzaGVldC1tYXN0ZXIvdGVzdC9jb3JlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydCBmcm9tICdhc3NlcnQnO1xuaW1wb3J0IHtkZXNjcmliZSwgaXR9IGZyb20gJ21vY2hhJztcbmltcG9ydCB7Y3V0U3RyfSBmcm9tIFwiLi4vLi4vc3JjL2NvcmUvb3BlcmF0b3JcIjtcblxuZGVzY3JpYmUoJ2luZml4RXhwclRvU3VmZml4RXhwcicsICgpID0+IHtcbiAgICBpdCgndGVzdCAxID09IDEnLCAoKSA9PiB7XG4gICAgICAgIGFzc2VydC5lcXVhbCgxLCAxKTtcbiAgICB9KTtcblxuICAgIGl0KCd0ZXN0IGN1dCcsICgpID0+IHtcbiAgICAgICAgbGV0IGFyciA9IGN1dFN0cihcIj1BMStBMitBREQoQTMsIEE0KSsnQTcnKzFcIik7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiYXJyOiBcIiwgYXJyKTtcbiAgICAgICAgbGV0IGEgPSBbJ0ExJywgJ0EyJywgJ0EzJywgJ0E0J107XG4gICAgICAgIGFzc2VydC5kZWVwU3RyaWN0RXF1YWwoYXJyLCBhKTtcbiAgICB9KTtcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "selectors_test.js"
      ],
      "names": [
        "assert",
        "equal",
        "arr",
        "console",
        "log",
        "a",
        "deepStrictEqual"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,qBAAS,uBAAT,EAAkC,YAAM;AACpC,iBAAG,aAAH,EAAkB,YAAM;AACpBA,oBAAOC,KAAP,CAAa,CAAb,EAAgB,CAAhB;AACH,GAFD;AAIA,iBAAG,UAAH,EAAe,YAAM;AACjB,QAAIC,GAAG,GAAG,sBAAO,2BAAP,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACA,QAAIG,CAAC,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAR;;AACAL,oBAAOM,eAAP,CAAuBJ,GAAvB,EAA4BG,CAA5B;AACH,GALD;AAMH,CAXD",
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/test/core",
      "sourcesContent": [
        "import assert from 'assert';\nimport {describe, it} from 'mocha';\nimport {cutStr} from \"../../src/core/operator\";\n\ndescribe('infixExprToSuffixExpr', () => {\n    it('test 1 == 1', () => {\n        assert.equal(1, 1);\n    });\n\n    it('test cut', () => {\n        let arr = cutStr(\"=A1+A2+ADD(A3, A4)+'A7'+1\");\n        console.log(\"arr: \", arr);\n        let a = ['A1', 'A2', 'A3', 'A4'];\n        assert.deepStrictEqual(arr, a);\n    });\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1564740397370
  },
  "{\"sourceRoot\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"filename\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/operator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/operator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/operator.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core/operator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
        "sourceFileName": "operator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cutStr = exports.operation = exports.operator = void 0;\nvar operator = [\"+\", \"-\", \"*\", \"/\", \"&\", \"^\", \"(\", \",\", \"=\"];\nexports.operator = operator;\n\nvar operation = function operation(s) {\n  for (var i = 0; i < operator.length; i++) {\n    if (operator[i] == s) {\n      return 1;\n    }\n  }\n\n  return 0;\n};\n\nexports.operation = operation;\n\nvar cutStr = function cutStr(str) {\n  str = str.replace(/\\s/g, \"\");\n  var arr = str.split(/([(-\\/,+*=^&])/);\n  var express = [];\n  arr.filter(function (i) {\n    if (i.search(/^[A-Za-z]+\\d+$/) != -1) express.push(i);\n  });\n  return express;\n};\n\nexports.cutStr = cutStr;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZXJhdG9yLmpzIl0sIm5hbWVzIjpbIm9wZXJhdG9yIiwib3BlcmF0aW9uIiwicyIsImkiLCJsZW5ndGgiLCJjdXRTdHIiLCJzdHIiLCJyZXBsYWNlIiwiYXJyIiwic3BsaXQiLCJleHByZXNzIiwiZmlsdGVyIiwic2VhcmNoIiwicHVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsUUFBUSxHQUFHLENBQ2IsR0FEYSxFQUNSLEdBRFEsRUFDSCxHQURHLEVBQ0UsR0FERixFQUNPLEdBRFAsRUFDWSxHQURaLEVBQ2lCLEdBRGpCLEVBQ3NCLEdBRHRCLEVBQzJCLEdBRDNCLENBQWpCOzs7QUFJQSxJQUFNQyxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDQyxDQUFELEVBQU87QUFDckIsT0FBSSxJQUFJQyxDQUFDLEdBQUcsQ0FBWixFQUFlQSxDQUFDLEdBQUdILFFBQVEsQ0FBQ0ksTUFBNUIsRUFBb0NELENBQUMsRUFBckMsRUFBeUM7QUFDckMsUUFBR0gsUUFBUSxDQUFDRyxDQUFELENBQVIsSUFBZUQsQ0FBbEIsRUFBcUI7QUFDakIsYUFBTyxDQUFQO0FBQ0g7QUFDSjs7QUFDRCxTQUFPLENBQVA7QUFDSCxDQVBEOzs7O0FBU0EsSUFBTUcsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBQ0MsR0FBRCxFQUFTO0FBQ3BCQSxFQUFBQSxHQUFHLEdBQUdBLEdBQUcsQ0FBQ0MsT0FBSixDQUFZLEtBQVosRUFBa0IsRUFBbEIsQ0FBTjtBQUNBLE1BQUlDLEdBQUcsR0FBR0YsR0FBRyxDQUFDRyxLQUFKLENBQVUsZ0JBQVYsQ0FBVjtBQUNBLE1BQUlDLE9BQU8sR0FBRyxFQUFkO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0csTUFBSixDQUFXLFVBQUFSLENBQUMsRUFBSTtBQUNaLFFBQUdBLENBQUMsQ0FBQ1MsTUFBRixDQUFTLGdCQUFULEtBQThCLENBQUMsQ0FBbEMsRUFDSUYsT0FBTyxDQUFDRyxJQUFSLENBQWFWLENBQWI7QUFDUCxHQUhEO0FBSUEsU0FBT08sT0FBUDtBQUNILENBVEQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3dlbi9EZXNrdG9wL3dvcmsvdnVlL2VkaXQvbm9kZV9tb2R1bGVzL3gtc3ByZWFkc2hlZXQtbWFzdGVyL3NyYy9jb3JlIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb3BlcmF0b3IgPSBbXG4gICAgXCIrXCIsIFwiLVwiLCBcIipcIiwgXCIvXCIsIFwiJlwiLCBcIl5cIiwgXCIoXCIsIFwiLFwiICxcIj1cIlxuXTtcblxuY29uc3Qgb3BlcmF0aW9uID0gKHMpID0+IHtcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgb3BlcmF0b3IubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYob3BlcmF0b3JbaV0gPT0gcykge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIDA7XG59O1xuXG5jb25zdCBjdXRTdHIgPSAoc3RyKSA9PiB7XG4gICAgc3RyID0gc3RyLnJlcGxhY2UoL1xccy9nLFwiXCIpO1xuICAgIGxldCBhcnIgPSBzdHIuc3BsaXQoLyhbKC1cXC8sKyo9XiZdKS8pO1xuICAgIGxldCBleHByZXNzID0gW107XG4gICAgYXJyLmZpbHRlcihpID0+IHtcbiAgICAgICAgaWYoaS5zZWFyY2goL15bQS1aYS16XStcXGQrJC8pICE9IC0xKVxuICAgICAgICAgICAgZXhwcmVzcy5wdXNoKGkpO1xuICAgIH0pO1xuICAgIHJldHVybiBleHByZXNzO1xufTtcblxuZXhwb3J0IHtcbiAgICBvcGVyYXRvcixcbiAgICBvcGVyYXRpb24sXG4gICAgY3V0U3RyLFxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "operator.js"
      ],
      "names": [
        "operator",
        "operation",
        "s",
        "i",
        "length",
        "cutStr",
        "str",
        "replace",
        "arr",
        "split",
        "express",
        "filter",
        "search",
        "push"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,QAAQ,GAAG,CACb,GADa,EACR,GADQ,EACH,GADG,EACE,GADF,EACO,GADP,EACY,GADZ,EACiB,GADjB,EACsB,GADtB,EAC2B,GAD3B,CAAjB;;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,CAAD,EAAO;AACrB,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,QAAQ,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,QAAGH,QAAQ,CAACG,CAAD,CAAR,IAAeD,CAAlB,EAAqB;AACjB,aAAO,CAAP;AACH;AACJ;;AACD,SAAO,CAAP;AACH,CAPD;;;;AASA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAS;AACpBA,EAAAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,KAAZ,EAAkB,EAAlB,CAAN;AACA,MAAIC,GAAG,GAAGF,GAAG,CAACG,KAAJ,CAAU,gBAAV,CAAV;AACA,MAAIC,OAAO,GAAG,EAAd;AACAF,EAAAA,GAAG,CAACG,MAAJ,CAAW,UAAAR,CAAC,EAAI;AACZ,QAAGA,CAAC,CAACS,MAAF,CAAS,gBAAT,KAA8B,CAAC,CAAlC,EACIF,OAAO,CAACG,IAAR,CAAaV,CAAb;AACP,GAHD;AAIA,SAAOO,OAAP;AACH,CATD",
      "sourceRoot": "/Users/wen/Desktop/work/vue/edit/node_modules/x-spreadsheet-master/src/core",
      "sourcesContent": [
        "const operator = [\n    \"+\", \"-\", \"*\", \"/\", \"&\", \"^\", \"(\", \",\" ,\"=\"\n];\n\nconst operation = (s) => {\n    for(let i = 0; i < operator.length; i++) {\n        if(operator[i] == s) {\n            return 1;\n        }\n    }\n    return 0;\n};\n\nconst cutStr = (str) => {\n    str = str.replace(/\\s/g,\"\");\n    let arr = str.split(/([(-\\/,+*=^&])/);\n    let express = [];\n    arr.filter(i => {\n        if(i.search(/^[A-Za-z]+\\d+$/) != -1)\n            express.push(i);\n    });\n    return express;\n};\n\nexport {\n    operator,\n    operation,\n    cutStr,\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1564740383074
  }
}